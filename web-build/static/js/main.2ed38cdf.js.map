{"version":3,"file":"static/js/main.2ed38cdf.js","mappings":"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","sources":["src/constants/theme.ts","src/services/ChurchCalendarService.ts","src/constants/config.ts","src/services/ApiService.ts","src/services/SocialMediaService.ts","src/services/NotificationService.ts","src/constants/languages.ts","src/contexts/LanguageContext.tsx","src/screens/CalendarScreen.tsx","src/screens/NotificationSettingsScreen.tsx","src/hooks/useAuth.ts","src/admin/screens/AdminLoginScreen.tsx","src/admin/screens/AdminDashboardScreen.tsx","src/admin/screens/ManageCalendarScreen.tsx","src/admin/screens/ManageLocationsScreen.tsx","src/admin/screens/SpecialEventsScreen.tsx","src/screens/EventFormScreen.tsx","src/navigation/AdminNavigator.tsx","src/navigation/AppNavigator.tsx","App.tsx","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { DefaultTheme } from 'react-native-paper';\n\nexport const COLORS = {\n  PRIMARY: '#8B0000',     // Deeper Church Red\n  SECONDARY: '#D4AF37',   // Richer Byzantine Gold\n  TERTIARY: '#1B3661',    // Orthodox Blue\n  BACKGROUND: '#F5F3E8',  // Warm Parchment\n  SURFACE: '#FFFFFF',     // Pure White\n  TEXT: '#2C1810',        // Deep Brown Text\n  TEXT_LIGHT: '#FFFFFF',  // White Text\n  BORDER: '#D4AF37',      // Gold Border\n  ERROR: '#FF3B30',\n  SUCCESS: '#34C759',\n  WARNING: '#FF9500',\n  CARD_BG: '#F8F4E9',    // Lighter Parchment for Cards\n};\n\nexport const SHADOWS = {\n  default: {\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  large: {\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 6 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 10,\n  }\n};\n\nexport const CARD_STYLES = {\n  orthodox: {\n    borderWidth: 2,\n    borderColor: COLORS.BORDER,\n    borderRadius: 15,\n    backgroundColor: COLORS.CARD_BG,\n    ...SHADOWS.default,\n    padding: 16,\n    borderStyle: 'solid',\n    // Paper-like texture through subtle inner shadow\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n  },\n  header: {\n    borderWidth: 3,\n    borderColor: COLORS.SECONDARY,\n    borderRadius: 20,\n    backgroundColor: COLORS.PRIMARY,\n    ...SHADOWS.large,\n    marginVertical: 8,\n    // Add subtle texture through inner shadow\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n  }\n};\n\nexport const theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: COLORS.PRIMARY,\n    accent: COLORS.SECONDARY,\n    background: COLORS.BACKGROUND,\n    surface: COLORS.SURFACE,\n    error: COLORS.ERROR,\n    text: COLORS.TEXT,\n  },\n  roundness: 12,\n};\n\nexport const navigationTheme = {\n  dark: false,\n  colors: {\n    primary: COLORS.PRIMARY,\n    background: COLORS.BACKGROUND,\n    card: COLORS.SURFACE,\n    text: COLORS.TEXT,\n    border: COLORS.BORDER,\n    notification: COLORS.PRIMARY,\n  },\n}; ","import { format, parse, isEqual } from 'date-fns';\nimport { mk } from 'date-fns/locale';\n\nexport type ServiceType = \n  | 'LITURGY' \n  | 'EVENING_SERVICE' \n  | 'CHURCH_OPEN' \n  | 'PICNIC';\n\nexport interface ChurchEvent {\n  date: Date;\n  name: string;\n  serviceType: ServiceType;\n  time: string;\n  description?: string;\n}\n\nexport const CHURCH_EVENTS_2025: ChurchEvent[] = [\n  // January\n  {\n    date: new Date(2025, 1-1, 5),\n    name: 'Св. Наум Охридски',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 1-1, 7),\n    name: 'Рождество Христово БОЖИК',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 1-1, 7),\n    name: 'Рождество Христово БОЖИК',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 1-1, 12),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 1-1, 19),\n    name: 'Голем Богојавленски Водосвет, Богојавление',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 1-1, 26),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  // February\n  {\n    date: new Date(2025, 2-1, 2),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 2-1, 9),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 2-1, 15),\n    name: 'Сретение Господово',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 2-1, 16),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 2-1, 22),\n    name: 'ЗАДУШНИЦА',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 2-1, 23),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  // March\n  {\n    date: new Date(2025, 3-1, 2),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 3-1, 9),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 3-1, 16),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 3-1, 23),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  // April\n  {\n    date: new Date(2025, 4-1, 6),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 4-1, 12),\n    name: 'Лазарева Сабота',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 4-1, 13),\n    name: 'ЦВЕТНИЦИ',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 4-1, 17),\n    name: 'Велики Четврток',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 4-1, 18),\n    name: 'Велики Петок',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 4-1, 19),\n    name: 'Велика Сабота',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 4-1, 20),\n    name: 'Воскресение на Господ Исус Христос, Велигден',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 4-1, 27),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  // May\n  {\n    date: new Date(2025, 5-1, 4),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 5-1, 6),\n    name: 'Св. вмч. Георгиј Победоносец',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 5-1, 11),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 5-1, 18),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 5-1, 24),\n    name: 'Св. Кирил и Методиј',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 5-1, 25),\n    name: 'Неделна',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 5-1, 28),\n    name: 'Вознесение Господово, Спасовден',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 5-1, 29),\n    name: 'Спасовден',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  // June events\n  {\n    date: new Date(2025, 5, 1), // June 1\n    name: 'Неделна Литургија',\n    time: '09:00',\n    serviceType: 'LITURGY',\n  },\n  {\n    date: new Date(2025, 5, 7), // June 7\n    name: 'ЗАДУШНИЦА – Литургија',\n    time: '09:00',\n    serviceType: 'LITURGY',\n  },\n  {\n    date: new Date(2025, 5, 8), // June 8\n    name: 'Слегување на Св. Дух – Неделна Литургија',\n    time: '09:00',\n    serviceType: 'LITURGY',\n  },\n  {\n    date: new Date(2025, 5, 15), // June 15\n    name: 'Неделна Литургија',\n    time: '09:00',\n    serviceType: 'LITURGY',\n  },\n  {\n    date: new Date(2025, 5, 22), // June 22\n    name: 'Неделна Литургија',\n    time: '09:00',\n    serviceType: 'LITURGY',\n  },\n  {\n    date: new Date(2025, 5, 29), // June 29\n    name: 'Црквата е отворена',\n    time: '09:00 – 13:00',\n    serviceType: 'CHURCH_OPEN',\n  },\n  // July\n  {\n    date: new Date(2025, 7-1, 2),\n    name: 'Св. Наум Охридски',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 7-1, 3),\n    name: 'Св. Наум Охридски',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 7-1, 6),\n    name: 'Неделна Литургија – Пикник',\n    serviceType: 'PICNIC',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 7-1, 12),\n    name: 'Св. ап-ли Петар и Павле, Петровден',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 7-1, 13),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 7-1, 20),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 7-1, 27),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  // August\n  {\n    date: new Date(2025, 8-1, 3),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 8-1, 10),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 8-1, 17),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 8-1, 18),\n    name: 'Преображение на Господ Исус Христос',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 8-1, 24),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 8-1, 27),\n    name: 'Успение на Пресвета Богородица',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 8-1, 28),\n    name: 'Богородица',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 8-1, 31),\n    name: 'Неделна Литургија ��� Пикник',\n    serviceType: 'PICNIC',\n    time: '09:00'\n  },\n  // September\n  {\n    date: new Date(2025, 9-1, 7),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 9-1, 10),\n    name: 'Отсекување на главата на Св. Јован Крстител',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 9-1, 11),\n    name: 'Св. Јован Крстител',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 9-1, 14),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 9-1, 21),\n    name: 'Мала Богородица – Литургија – Пикник',\n    serviceType: 'PICNIC',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 9-1, 27),\n    name: 'Воздвижение на Чесниот Крст, Крстовден',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 9-1, 28),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  // October\n  {\n    date: new Date(2025, 10-1, 5),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 10-1, 12),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 10-1, 19),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 10-1, 26),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 10-1, 27),\n    name: 'Св. Петка, Петковден',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  // November\n  {\n    date: new Date(2025, 11-1, 1),\n    name: 'ЗАДУШНИЦА',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 11-1, 2),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 11-1, 8),\n    name: 'Св. вмч. Димитриј – Митровден',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 11-1, 9),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 11-1, 16),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 11-1, 20),\n    name: 'Собор на св. Архангел Михаил',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 11-1, 21),\n    name: 'Собор на св. Архангел Михаил',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 11-1, 23),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 11-1, 30),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  // December\n  {\n    date: new Date(2025, 12-1, 3),\n    name: 'Воведение на Пресвета Богородица – Пречиста',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 12-1, 4),\n    name: 'Пречиста',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 12-1, 7),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 12-1, 14),\n    name: 'Неделна Литургија',\n    serviceType: 'LITURGY',\n    time: '09:00'\n  },\n  {\n    date: new Date(2025, 12-1, 18),\n    name: 'Св. Николај',\n    serviceType: 'EVENING_SERVICE',\n    time: '19:00'\n  },\n  {\n    date: new Date(2025, 12-1, 19),\n    name: 'Св. Николај',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 12-1, 21),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  },\n  {\n    date: new Date(2025, 12-1, 28),\n    name: 'Црквата е отворена',\n    serviceType: 'CHURCH_OPEN',\n    time: '09:00',\n    description: '09:00 - 13:00'\n  }\n];\n\nexport const getEventsForDate = (date: Date): ChurchEvent[] => {\n  return CHURCH_EVENTS_2025.filter(event => \n    isEqual(\n      new Date(event.date.getFullYear(), event.date.getMonth(), event.date.getDate()),\n      new Date(date.getFullYear(), date.getMonth(), date.getDate())\n    )\n  );\n};\n\nexport const getUpcomingEvents = (fromDate: Date, days: number = 7): ChurchEvent[] => {\n  const endDate = new Date(fromDate);\n  endDate.setDate(endDate.getDate() + days);\n  \n  return CHURCH_EVENTS_2025.filter(event => \n    event.date >= fromDate && event.date <= endDate\n  ).sort((a, b) => a.date.getTime() - b.date.getTime());\n};\n\nexport const formatEventDate = (date: Date): string => {\n  return format(date, 'dd.MM.yyyy');\n};\n\nexport const formatEventTime = (time: string): string => {\n  return time;\n};\n\nexport const getServiceTypeLabel = (type: ServiceType): string => {\n  switch (type) {\n    case 'LITURGY':\n      return 'Литургија';\n    case 'EVENING_SERVICE':\n      return 'Вечерна Богослужба';\n    case 'CHURCH_OPEN':\n      return 'Црквата е отворена';\n    case 'PICNIC':\n      return 'Пикник';\n    default:\n      return '';\n  }\n}; ","import {\n  FACEBOOK_APP_ID,\n  FACEBOOK_APP_SECRET,\n  FACEBOOK_ACCESS_TOKEN\n} from '@env';\n\nexport const CONFIG = {\n  APP_NAME: 'Sv Naum Calendar',\n  VERSION: '1.0.0',\n  \n  // API Configuration\n  API: {\n    BASE_URL: 'https://mpc-triengen.ch/api',\n    ENDPOINTS: {\n      POSTS: '/posts',\n      EVENTS: '/events',\n      NOTIFICATIONS: '/notifications',\n    },\n    AUTH_TOKEN: 'your-api-token',\n    TIMEOUT: 10000, // 10 seconds\n  },\n  \n  // Storage Keys\n  STORAGE_KEYS: {\n    AUTH_TOKEN: '@auth_token',\n    USER_SETTINGS: '@user_settings',\n    NOTIFICATIONS: '@notifications_settings',\n  },\n  \n  // Social Media URLs and Configuration\n  SOCIAL_MEDIA: {\n    FACEBOOK_GROUP: 'https://www.facebook.com/groups/Mpctriengen/',\n    WEBSITE: 'https://mpc-triengen.ch',\n    FACEBOOK: {\n      APP_ID: FACEBOOK_APP_ID || '',\n      APP_SECRET: FACEBOOK_APP_SECRET || '',\n      GROUP_ID: '', // Will be configured later\n      ACCESS_TOKEN: FACEBOOK_ACCESS_TOKEN || '',\n    },\n    AUTO_POST: {\n      ENABLED: false, // Disabled for now\n      PLATFORMS: {\n        FACEBOOK: false, // Disabled for now\n        WEBSITE: false,  // Disabled for now\n      },\n    },\n  },\n  \n  // Theme Colors\n  COLORS: {\n    PRIMARY: '#831B26',\n    SECONDARY: '#F2A333',\n    SUCCESS: '#34C759',\n    DANGER: '#FF3B30',\n    WARNING: '#FF9500',\n    INFO: '#5AC8FA',\n    LIGHT: '#F2F2F7',\n    DARK: '#1C1C1E',\n  },\n  \n  // Default Settings\n  DEFAULTS: {\n    NOTIFICATIONS: {\n      EVENT_REMINDERS: true,\n      DAILY_DIGEST: false,\n      WEEKLY_NEWSLETTER: true,\n    },\n    CALENDAR: {\n      DEFAULT_VIEW: 'month',\n      FIRST_DAY: 1, // Monday\n      SHOW_WEEK_NUMBERS: true,\n    },\n  },\n  \n  // Feature Flags\n  FEATURES: {\n    ENABLE_PUSH_NOTIFICATIONS: true,\n    ENABLE_CALENDAR_SYNC: true,\n    ENABLE_SOCIAL_SHARING: false, // Disabled for now\n  },\n}; ","import { CONFIG } from '../constants/config';\n\ntype ApiResponse<T> = {\n  success: boolean;\n  data?: T;\n  error?: string;\n};\n\ntype PostData = {\n  title: string;\n  content: string;\n  type: 'event' | 'notification' | 'news';\n  date: string;\n  metadata?: Record<string, any>;\n};\n\nclass ApiService {\n  private baseUrl: string;\n  private authToken: string;\n  private timeout: number;\n\n  constructor() {\n    this.baseUrl = CONFIG.API.BASE_URL;\n    this.authToken = CONFIG.API.AUTH_TOKEN;\n    this.timeout = CONFIG.API.TIMEOUT;\n  }\n\n  private async fetchWithTimeout(\n    url: string,\n    options: RequestInit = {}\n  ): Promise<Response> {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        signal: controller.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.authToken}`,\n          ...options.headers,\n        },\n      });\n      return response;\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  private async handleResponse<T>(response: Response): Promise<ApiResponse<T>> {\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      return {\n        success: false,\n        error: errorData.message || `HTTP error! status: ${response.status}`,\n      };\n    }\n\n    const data = await response.json();\n    return {\n      success: true,\n      data,\n    };\n  }\n\n  async createPost(postData: PostData): Promise<ApiResponse<any>> {\n    try {\n      const response = await this.fetchWithTimeout(\n        `${this.baseUrl}${CONFIG.API.ENDPOINTS.POSTS}`,\n        {\n          method: 'POST',\n          body: JSON.stringify(postData),\n        }\n      );\n\n      return this.handleResponse(response);\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  }\n\n  async updatePost(postId: string, postData: Partial<PostData>): Promise<ApiResponse<any>> {\n    try {\n      const response = await this.fetchWithTimeout(\n        `${this.baseUrl}${CONFIG.API.ENDPOINTS.POSTS}/${postId}`,\n        {\n          method: 'PUT',\n          body: JSON.stringify(postData),\n        }\n      );\n\n      return this.handleResponse(response);\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  }\n\n  async deletePost(postId: string): Promise<ApiResponse<any>> {\n    try {\n      const response = await this.fetchWithTimeout(\n        `${this.baseUrl}${CONFIG.API.ENDPOINTS.POSTS}/${postId}`,\n        {\n          method: 'DELETE',\n        }\n      );\n\n      return this.handleResponse(response);\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  }\n\n  async getPosts(type?: string): Promise<ApiResponse<any[]>> {\n    try {\n      const queryParams = type ? `?type=${type}` : '';\n      const response = await this.fetchWithTimeout(\n        `${this.baseUrl}${CONFIG.API.ENDPOINTS.POSTS}${queryParams}`\n      );\n\n      return this.handleResponse(response);\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  }\n}\n\nexport default new ApiService(); ","import { Linking, Share } from 'react-native';\nimport { ChurchEvent } from './ChurchCalendarService';\nimport { format } from 'date-fns';\nimport { mk } from 'date-fns/locale';\nimport { CONFIG } from '../constants/config';\nimport ApiService from './ApiService';\n\nconst {\n  FACEBOOK_GROUP: FACEBOOK_GROUP_URL,\n  WEBSITE: WEBSITE_URL,\n  FACEBOOK,\n  AUTO_POST\n} = CONFIG.SOCIAL_MEDIA;\n\nclass SocialMediaService {\n  openFacebookGroup = () => {\n    Linking.openURL(FACEBOOK_GROUP_URL);\n  };\n\n  openWebsite = () => {\n    Linking.openURL(WEBSITE_URL);\n  };\n\n  openContact = () => {\n    Linking.openURL('tel:+41798293999');\n  };\n\n  shareEvent = async (event: ChurchEvent) => {\n    const formattedDate = format(event.date, 'dd MMMM yyyy', { locale: mk });\n    const message = `${event.name}\\nДатум: ${formattedDate}\\nВреме: ${event.time}\\n\\n${event.description || ''}\\n\\nПовеќе информации на нашата веб-страница: ${WEBSITE_URL}`;\n\n    try {\n      await Share.share({\n        message,\n        title: event.name,\n      });\n    } catch (error) {\n      console.error('Error sharing event:', error);\n    }\n  };\n\n  postToFacebookGroup = async (title: string, message: string) => {\n    if (!AUTO_POST.ENABLED || !AUTO_POST.PLATFORMS.FACEBOOK) return true;\n    if (!FACEBOOK.ACCESS_TOKEN || !FACEBOOK.GROUP_ID) {\n      console.warn('Facebook credentials not configured');\n      return false;\n    }\n\n    try {\n      const fullMessage = `${title}\\n\\n${message}\\n\\nПовеќе информации: ${WEBSITE_URL}`;\n      \n      const response = await fetch(\n        `https://graph.facebook.com/v18.0/${FACEBOOK.GROUP_ID}/feed`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            message: fullMessage,\n            access_token: FACEBOOK.ACCESS_TOKEN,\n          }),\n        }\n      );\n\n      const data = await response.json();\n      \n      if (!response.ok || data.error) {\n        throw new Error(data.error?.message || 'Failed to post to Facebook');\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error posting to Facebook:', error);\n      return false;\n    }\n  };\n\n  postToWebsite = async (title: string, message: string) => {\n    if (!AUTO_POST.ENABLED || !AUTO_POST.PLATFORMS.WEBSITE) return true;\n\n    try {\n      const response = await ApiService.createPost({\n        title,\n        content: message,\n        type: 'notification',\n        date: new Date().toISOString(),\n        metadata: {\n          source: 'mobile_app',\n          autoPost: true\n        }\n      });\n\n      if (!response.success) {\n        throw new Error(response.error || 'Failed to post to website');\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error posting to website:', error);\n      return false;\n    }\n  };\n\n  postNotificationToSocialMedia = async (title: string, message: string) => {\n    if (!AUTO_POST.ENABLED) return { facebookSuccess: true, websiteSuccess: true };\n\n    const results = await Promise.all([\n      this.postToFacebookGroup(title, message),\n      this.postToWebsite(title, message)\n    ]);\n\n    return {\n      facebookSuccess: results[0],\n      websiteSuccess: results[1]\n    };\n  };\n\n  postEventToSocialMedia = async (event: ChurchEvent, notificationType: 'week' | 'day' | 'hour') => {\n    if (!AUTO_POST.ENABLED) return { facebookSuccess: true, websiteSuccess: true };\n\n    const formattedDate = format(event.date, 'dd MMMM yyyy', { locale: mk });\n    let title = '';\n    let message = '';\n\n    switch (notificationType) {\n      case 'week':\n        title = `Најава: ${event.name}`;\n        message = `Следната недела на ${formattedDate} во ${event.time} ќе се одржи ${event.name}.\\n\\n${event.description || ''}`;\n        break;\n      case 'day':\n        title = `Потсетник: ${event.name}`;\n        message = `Утре во ${event.time} ќе се одржи ${event.name}.\\n\\n${event.description || ''}`;\n        break;\n      case 'hour':\n        title = `${event.name} започнува наскоро`;\n        message = `За 1 час започнува ${event.name}.\\n\\n${event.description || ''}`;\n        break;\n    }\n\n    return this.postNotificationToSocialMedia(title, message);\n  };\n}\n\nexport default new SocialMediaService(); ","import { ChurchEvent, CHURCH_EVENTS_2025 } from './ChurchCalendarService';\nimport * as Notifications from 'expo-notifications';\nimport * as Device from 'expo-device';\nimport { Platform } from 'react-native';\nimport { format, addMinutes, addDays, isBefore, addYears, isAfter } from 'date-fns';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport SocialMediaService from './SocialMediaService';\n\nconst NOTIFICATION_SETTINGS_KEY = '@notification_settings';\nconst LAST_SCHEDULE_CHECK = '@last_schedule_check';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nclass NotificationService {\n  constructor() {\n    this.configure();\n    this.setupYearlyScheduling();\n  }\n\n  setupYearlyScheduling = async () => {\n    // Check if we need to schedule for the next year\n    const lastCheck = await AsyncStorage.getItem(LAST_SCHEDULE_CHECK);\n    const now = new Date();\n    const lastCheckDate = lastCheck ? new Date(lastCheck) : null;\n\n    // If we haven't checked this year or it's the first time\n    if (!lastCheckDate || isAfter(now, addYears(lastCheckDate, 1))) {\n      await this.scheduleYearEvents();\n      await AsyncStorage.setItem(LAST_SCHEDULE_CHECK, now.toISOString());\n    }\n\n    // Set up daily check for next year's events\n    this.setupDailyCheck();\n  };\n\n  setupDailyCheck = () => {\n    const now = new Date();\n    const tomorrow = new Date(now);\n    tomorrow.setHours(0, 0, 0, 0);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n\n    const timeUntilMidnight = tomorrow.getTime() - now.getTime();\n\n    // Schedule the first check\n    setTimeout(async () => {\n      await this.checkAndScheduleNextYear();\n      // Then set up daily checks\n      setInterval(this.checkAndScheduleNextYear, 24 * 60 * 60 * 1000);\n    }, timeUntilMidnight);\n  };\n\n  checkAndScheduleNextYear = async () => {\n    const now = new Date();\n    const currentYear = now.getFullYear();\n    \n    // If we're in December, schedule next year's events\n    if (now.getMonth() === 11) {\n      const events = this.generateNextYearEvents(currentYear + 1);\n      await this.scheduleEventsForYear(events);\n      await AsyncStorage.setItem(LAST_SCHEDULE_CHECK, now.toISOString());\n    }\n  };\n\n  generateNextYearEvents = (year: number): ChurchEvent[] => {\n    // Create next year's events based on this year's dates\n    return CHURCH_EVENTS_2025.map(event => {\n      const newDate = new Date(event.date);\n      newDate.setFullYear(year);\n      return {\n        ...event,\n        date: newDate\n      };\n    });\n  };\n\n  scheduleYearEvents = async () => {\n    try {\n      const settings = await this.getNotificationSettings();\n      if (!settings.enabled) return;\n\n      // Cancel existing notifications to avoid duplicates\n      await this.cancelAllNotifications();\n\n      const now = new Date();\n      const nextYear = addYears(now, 1);\n\n      // Schedule current year's remaining events\n      const currentYearEvents = CHURCH_EVENTS_2025.filter(event => {\n        const eventDate = new Date(event.date);\n        return isAfter(eventDate, now) && isBefore(eventDate, nextYear);\n      });\n\n      await this.scheduleEventsForYear(currentYearEvents);\n\n      // Schedule next year's events if we're in the last month\n      if (now.getMonth() === 11) {\n        const nextYearEvents = this.generateNextYearEvents(now.getFullYear() + 1);\n        await this.scheduleEventsForYear(nextYearEvents);\n      }\n    } catch (error) {\n      console.error('Error scheduling yearly events:', error);\n    }\n  };\n\n  scheduleEventsForYear = async (events: ChurchEvent[]) => {\n    const settings = await this.getNotificationSettings();\n\n    for (const event of events) {\n      if (settings.weekBefore) {\n        await this.scheduleEventReminder(event, 7 * 24 * 60); // Week before\n      }\n      if (settings.dayBefore) {\n        await this.scheduleEventReminder(event, 24 * 60); // Day before\n      }\n      if (settings.hourBefore) {\n        await this.scheduleEventReminder(event, 60); // Hour before\n      }\n    }\n  };\n\n  scheduleEventReminder = async (event: ChurchEvent, minutesBefore: number) => {\n    const [hours, minutes] = event.time.split(':').map(Number);\n    const eventDate = new Date(event.date);\n    eventDate.setHours(hours, minutes);\n\n    const notificationTime = addMinutes(eventDate, -minutesBefore);\n    const identifier = `${event.date.getTime()}-${event.serviceType}-${minutesBefore}`;\n\n    // Don't schedule if the notification time is in the past\n    if (isBefore(notificationTime, new Date())) return;\n\n    let message = '';\n    let notificationType: 'week' | 'day' | 'hour' | null = null;\n\n    if (minutesBefore === 60) {\n      message = `${event.name} започнува за 1 час`;\n      notificationType = 'hour';\n    } else if (minutesBefore === 24 * 60) {\n      message = `${event.name} е утре во ${event.time}`;\n      notificationType = 'day';\n    } else if (minutesBefore === 7 * 24 * 60) {\n      message = `${event.name} е следната недела во ${event.time}`;\n      notificationType = 'week';\n    }\n\n    if (event.serviceType === 'PICNIC' && event.description) {\n      message += `\\nЛокација: ${event.description}`;\n    }\n\n    // Schedule the notification\n    await this.scheduleNotification({\n      title: event.name,\n      message,\n      date: notificationTime,\n      identifier,\n      urgent: event.serviceType === 'PICNIC',\n    });\n\n    // Post to social media if it's a notification type we want to share\n    if (notificationType) {\n      try {\n        await SocialMediaService.postEventToSocialMedia(event, notificationType);\n      } catch (error) {\n        console.error('Error posting to social media:', error);\n      }\n    }\n  };\n\n  configure = async () => {\n    if (Platform.OS === 'android') {\n      await Notifications.setNotificationChannelAsync('church-events', {\n        name: 'Church Events',\n        description: 'Church calendar events and reminders',\n        importance: Notifications.AndroidImportance.MAX,\n        vibrationPattern: [0, 250, 250, 250],\n        lightColor: '#831B26',\n      });\n\n      await Notifications.setNotificationChannelAsync('urgent-updates', {\n        name: 'Urgent Updates',\n        description: 'Important church updates and announcements',\n        importance: Notifications.AndroidImportance.MAX,\n        vibrationPattern: [0, 250, 250, 250],\n        lightColor: '#FF0000',\n      });\n    }\n\n    if (Device.isDevice) {\n      const { status: existingStatus } = await Notifications.getPermissionsAsync();\n      let finalStatus = existingStatus;\n      if (existingStatus !== 'granted') {\n        const { status } = await Notifications.requestPermissionsAsync();\n        finalStatus = status;\n      }\n      if (finalStatus !== 'granted') {\n        console.log('Failed to get push token for push notification!');\n        return;\n      }\n    }\n  };\n\n  getNotificationSettings = async () => {\n    try {\n      const settings = await AsyncStorage.getItem(NOTIFICATION_SETTINGS_KEY);\n      return settings ? JSON.parse(settings) : {\n        enabled: true,\n        dayBefore: true,\n        hourBefore: true,\n        weekBefore: false,\n      };\n    } catch (error) {\n      console.error('Error getting notification settings:', error);\n      return {\n        enabled: true,\n        dayBefore: true,\n        hourBefore: true,\n        weekBefore: false,\n      };\n    }\n  };\n\n  updateNotificationSettings = async (settings: {\n    enabled: boolean;\n    dayBefore: boolean;\n    hourBefore: boolean;\n    weekBefore: boolean;\n  }) => {\n    try {\n      await AsyncStorage.setItem(NOTIFICATION_SETTINGS_KEY, JSON.stringify(settings));\n      if (settings.enabled) {\n        await this.scheduleYearEvents();\n      } else {\n        await this.cancelAllNotifications();\n      }\n    } catch (error) {\n      console.error('Error updating notification settings:', error);\n    }\n  };\n\n  scheduleNotification = async (reminder: {\n    title: string;\n    message: string;\n    date: Date;\n    identifier?: string;\n    urgent?: boolean;\n  }) => {\n    const { title, message, date, identifier, urgent } = reminder;\n\n    await Notifications.scheduleNotificationAsync({\n      content: {\n        title,\n        body: message,\n        sound: true,\n        priority: urgent ? Notifications.AndroidNotificationPriority.MAX : Notifications.AndroidNotificationPriority.DEFAULT,\n      },\n      trigger: {\n        date,\n        channelId: urgent ? 'urgent-updates' : 'church-events',\n      },\n      identifier,\n    });\n  };\n\n  sendCustomNotification = async (notification: {\n    title: string;\n    message: string;\n    date?: Date;\n    urgent?: boolean;\n  }) => {\n    const { title, message, date = new Date(), urgent = true } = notification;\n\n    await this.scheduleNotification({\n      title,\n      message,\n      date,\n      urgent,\n      identifier: `custom-${Date.now()}`,\n    });\n  };\n\n  cancelAllNotifications = async () => {\n    await Notifications.cancelAllScheduledNotificationsAsync();\n  };\n\n  cancelNotification = async (identifier: string) => {\n    await Notifications.cancelScheduledNotificationAsync(identifier);\n  };\n}\n\nexport default new NotificationService(); ","export const LANGUAGES = {\n  MK: 'mk',\n  EN: 'en',\n} as const;\n\nexport type Language = typeof LANGUAGES[keyof typeof LANGUAGES];\n\nexport const translations = {\n  [LANGUAGES.MK]: {\n    // App Navigation\n    calendar: 'Календар',\n    addEvent: 'Додај настан',\n    settings: 'Поставки',\n    admin: 'Админ',\n\n    // Events\n    eventTitle: 'Наслов на настанот',\n    eventDescription: 'Опис на настанот',\n    eventDate: 'Датум',\n    eventTime: 'Време',\n    eventLocation: 'Локација',\n    saveEvent: 'Зачувај',\n    deleteEvent: 'Избриши',\n    editEvent: 'Измени',\n\n    // Church Events\n    sundayService: 'Недела - Божествена Литургија',\n    stNaumDay: 'Св. Наум Охридски Чудотворец',\n    christmas: 'Божик',\n    easter: 'Велигден',\n    epiphany: 'Водици',\n    assumption: 'Успение на Пресвета Богородица',\n    goodFriday: 'Велики Петок',\n    palmSunday: 'Цветници',\n\n    // Notifications\n    notificationSettings: 'Поставки за известувања',\n    eventReminders: 'Потсетници за настани',\n    dailyDigest: 'Дневен преглед',\n    weeklyNewsletter: 'Неделен билтен',\n    \n    // Admin Panel\n    login: 'Најава',\n    logout: 'Одјава',\n    username: 'Корисничко име',\n    password: 'Лозинка',\n    dashboard: 'Контролна табла',\n    manageEvents: 'Управување со настани',\n    manageUsers: 'Управување со корисници',\n    manageNotifications: 'Управување со известувања',\n\n    // Messages\n    loginSuccess: 'Успешна најава',\n    loginError: 'Погрешно корисничко име или лозинка',\n    eventSaved: 'Настанот е зачуван',\n    eventDeleted: 'Настанот е избришан',\n    settingsSaved: 'Поставките се зачувани',\n  },\n  [LANGUAGES.EN]: {\n    // App Navigation\n    calendar: 'Calendar',\n    addEvent: 'Add Event',\n    settings: 'Settings',\n    admin: 'Admin',\n\n    // Events\n    eventTitle: 'Event Title',\n    eventDescription: 'Event Description',\n    eventDate: 'Date',\n    eventTime: 'Time',\n    eventLocation: 'Location',\n    saveEvent: 'Save',\n    deleteEvent: 'Delete',\n    editEvent: 'Edit',\n\n    // Church Events\n    sundayService: 'Sunday Divine Liturgy',\n    stNaumDay: 'St. Naum of Ohrid the Wonderworker',\n    christmas: 'Christmas',\n    easter: 'Easter',\n    epiphany: 'Epiphany',\n    assumption: 'Assumption of the Virgin Mary',\n    goodFriday: 'Good Friday',\n    palmSunday: 'Palm Sunday',\n\n    // Notifications\n    notificationSettings: 'Notification Settings',\n    eventReminders: 'Event Reminders',\n    dailyDigest: 'Daily Digest',\n    weeklyNewsletter: 'Weekly Newsletter',\n    \n    // Admin Panel\n    login: 'Login',\n    logout: 'Logout',\n    username: 'Username',\n    password: 'Password',\n    dashboard: 'Dashboard',\n    manageEvents: 'Manage Events',\n    manageUsers: 'Manage Users',\n    manageNotifications: 'Manage Notifications',\n\n    // Messages\n    loginSuccess: 'Login successful',\n    loginError: 'Invalid username or password',\n    eventSaved: 'Event saved',\n    eventDeleted: 'Event deleted',\n    settingsSaved: 'Settings saved',\n  },\n}; ","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LANGUAGES, Language, translations } from '../constants/languages';\n\ntype LanguageContextType = {\n  language: Language;\n  setLanguage: (lang: Language) => Promise<void>;\n  t: typeof translations[Language];\n};\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nconst LANGUAGE_STORAGE_KEY = '@app_language';\n\nexport const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [language, setLanguageState] = useState<Language>(LANGUAGES.MK);\n\n  useEffect(() => {\n    // Load saved language preference\n    const loadLanguage = async () => {\n      try {\n        const savedLanguage = await AsyncStorage.getItem(LANGUAGE_STORAGE_KEY);\n        if (savedLanguage && (savedLanguage === LANGUAGES.MK || savedLanguage === LANGUAGES.EN)) {\n          setLanguageState(savedLanguage);\n        }\n      } catch (error) {\n        console.error('Error loading language:', error);\n      }\n    };\n    loadLanguage();\n  }, []);\n\n  const setLanguage = async (lang: Language) => {\n    try {\n      await AsyncStorage.setItem(LANGUAGE_STORAGE_KEY, lang);\n      setLanguageState(lang);\n    } catch (error) {\n      console.error('Error saving language:', error);\n    }\n  };\n\n  return (\n    <LanguageContext.Provider\n      value={{\n        language,\n        setLanguage,\n        t: translations[language],\n      }}\n    >\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLanguage = () => {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}; ","import React, { useState, useRef, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Platform, Image, Animated, TouchableOpacity, Dimensions, ActivityIndicator, SafeAreaView, Text } from 'react-native';\nimport { Card, Title, Searchbar, Surface, Chip, Button, Dialog, Portal } from 'react-native-paper';\nimport { CHURCH_EVENTS_2025, ChurchEvent, getServiceTypeLabel, ServiceType, getEventsForDate } from '../services/ChurchCalendarService';\nimport { COLORS, CARD_STYLES } from '../constants/theme';\nimport { format } from 'date-fns';\nimport { mk } from 'date-fns/locale';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport SocialMediaService from '../services/SocialMediaService';\nimport { Linking } from 'react-native';\n\nconst SERVICE_TYPE_COLORS = {\n  LITURGY: '#E57373',\n  EVENING_SERVICE: '#81C784',\n  CHURCH_OPEN: '#64B5F6',\n  PICNIC: '#FFB74D'\n} as const;\n\nconst SERVICE_TYPE_ICONS = {\n  LITURGY: 'church' as const,\n  EVENING_SERVICE: 'moon-waning-crescent' as const,\n  CHURCH_OPEN: 'door-open' as const,\n  PICNIC: 'food' as const\n} as const;\n\nconst getEventImage = (event: ChurchEvent) => {\n  const date = event.date;\n\n  // January images\n  if (event.name === 'Св. Наум Охридски') {\n    try {\n      return require('../../assets/images/saints/05-Jan.jpg');\n    } catch (error) {\n      console.error('Error loading January 5th image:', error);\n      return null;\n    }\n  }\n\n  // Handle all dates with a switch statement\n  const dateKey = `${date.getDate()}-${date.getMonth() + 1}`; // +1 to convert from 0-based month\n  switch (dateKey) {\n    // January\n    case '5-1': // January 5\n      try {\n        return require('../../assets/images/saints/05-Jan.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '12-1': // January 12\n      try {\n        return require('../../assets/images/saints/12-Jan.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '19-1': // January 19\n      try {\n        return require('../../assets/images/saints/19-Jan.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '26-1': // January 26\n      try {\n        return require('../../assets/images/saints/26-Jan.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    \n    // February\n    case '2-2': // February 2\n      try {\n        return require('../../assets/images/saints/02-Feb.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '9-2': // February 9\n      try {\n        return require('../../assets/images/saints/09-Feb.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '15-2': // February 15\n      try {\n        return require('../../assets/images/saints/15-Feb.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '16-2': // February 16\n      try {\n        return require('../../assets/images/saints/16-Feb.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '22-2': // February 22\n      try {\n        return require('../../assets/images/saints/22-Feb.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '23-2': // February 23\n      try {\n        return require('../../assets/images/saints/23-Feb.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    // March\n    case '2-3': // March 2\n      try {\n        return require('../../assets/images/saints/02-March.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '9-3': // March 9\n      try {\n        return require('../../assets/images/saints/09-March.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '16-3': // March 16\n      try {\n        return require('../../assets/images/saints/16-March.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '23-3': // March 23\n      try {\n        return require('../../assets/images/saints/23-March.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    // April\n    case '6-4': // April 6\n      try {\n        return require('../../assets/images/saints/06-April.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '12-4': // April 12\n      try {\n        return require('../../assets/images/saints/12-April.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '13-4': // April 13\n      try {\n        return require('../../assets/images/saints/13-April.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '17-4': // April 17\n      try {\n        return require('../../assets/images/saints/17-April.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '18-4': // April 18\n      try {\n        return require('../../assets/images/saints/18-April.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '19-4': // April 19\n      try {\n        return require('../../assets/images/saints/19-April.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '20-4': // April 20\n      try {\n        return require('../../assets/images/saints/20-April.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '27-4': // April 27\n      try {\n        return require('../../assets/images/saints/27-April.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    // May\n    case '4-5': // May 4\n      try {\n        return require('../../assets/images/saints/04-May.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '6-5': // May 6\n      try {\n        return require('../../assets/images/saints/06-May.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '11-5': // May 11\n      try {\n        return require('../../assets/images/saints/11-May.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '18-5': // May 18\n      try {\n        return require('../../assets/images/saints/18-May.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '24-5': // May 24\n      try {\n        return require('../../assets/images/saints/24-May.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '25-5': // May 25\n      try {\n        return require('../../assets/images/saints/25-May.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '28-5': // May 28\n      try {\n        return require('../../assets/images/saints/28-May.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '29-5': // May 29 (using same image as May 28)\n      try {\n        return require('../../assets/images/saints/28-May.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    // June\n    case '1-6': // June 1\n      try {\n        return require('../../assets/images/saints/01-June.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '2-6': // June 2\n      try {\n        return require('../../assets/images/saints/01-June.jpg'); // Using June 1st image as fallback\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '8-6': // June 8\n      try {\n        return require('../../assets/images/saints/08-June.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '15-6': // June 15\n      try {\n        return require('../../assets/images/saints/15-June.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '22-6': // June 22\n      try {\n        return require('../../assets/images/saints/22-June.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '29-6': // June 29\n      try {\n        return require('../../assets/images/saints/29-June.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    // July\n    case '2-7': // July 2\n      try {\n        return require('../../assets/images/saints/07-July.jpg'); // Using July 7th image as fallback\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '3-7': // July 3\n      try {\n        return require('../../assets/images/saints/03-July.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '6-7': // July 6\n      try {\n        return require('../../assets/images/saints/03-July.jpg'); // Using July 3rd image as fallback\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '12-7': // July 12\n      try {\n        return require('../../assets/images/saints/12-July.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '13-7': // July 13\n      try {\n        return require('../../assets/images/saints/13-July.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '20-7': // July 20\n      try {\n        return require('../../assets/images/saints/20-July.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '27-7': // July 27\n      try {\n        return require('../../assets/images/saints/27-July.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    // August\n    case '3-8': // August 3\n      try {\n        return require('../../assets/images/saints/03-Aug.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '10-8': // August 10\n      try {\n        return require('../../assets/images/saints/10-Aug.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '17-8': // August 17\n      try {\n        return require('../../assets/images/saints/17-Aug.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '18-8': // August 18\n      try {\n        return require('../../assets/images/saints/18-Aug.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '24-8': // August 24\n      try {\n        return require('../../assets/images/saints/24-Aug.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '27-8': // August 27\n      try {\n        return require('../../assets/images/saints/27-Aug.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '28-8': // August 28\n      try {\n        return require('../../assets/images/saints/28-Aug.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '31-8': // August 31\n      try {\n        return require('../../assets/images/saints/31-Aug.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    // September\n    case '7-9': // September 7\n      try {\n        return require('../../assets/images/saints/07-Sep.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '10-9': // September 10\n      try {\n        return require('../../assets/images/saints/11-Sep.jpg'); // Using Sept 11 image as it's related to St. John\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '11-9': // September 11\n      try {\n        return require('../../assets/images/saints/11-Sep.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '14-9': // September 14\n      try {\n        return require('../../assets/images/saints/14-Sep.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '21-9': // September 21\n      try {\n        return require('../../assets/images/saints/21-Sep.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '27-9': // September 27\n      try {\n        return require('../../assets/images/saints/27-Sep.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '28-9': // September 28\n      try {\n        return require('../../assets/images/saints/28-Sep.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    // October\n    case '5-10': // October 5\n      try {\n        return require('../../assets/images/saints/05- Oct.jpg'); // Note the space after hyphen\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '12-10': // October 12\n      try {\n        return require('../../assets/images/saints/12-Oct.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '19-10': // October 19\n      try {\n        return require('../../assets/images/saints/19-Oct.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '26-10': // October 26\n      try {\n        return require('../../assets/images/saints/26-Oct.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '27-10': // October 27 - St. Petka (Petkovden)\n      try {\n        return require('../../assets/images/saints/27-Oct.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    // November\n    case '1-11': // November 1 - ZADUSHNICA\n      try {\n        return require('../../assets/images/saints/01-Nov.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '2-11': // November 2\n      try {\n        return require('../../assets/images/saints/02-Nov.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '8-11': // November 8 - St. Dimitrij (Mitrovden)\n      try {\n        return require('../../assets/images/saints/08-Nov.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '9-11': // November 9\n      try {\n        return require('../../assets/images/saints/09-Nov.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '16-11': // November 16\n      try {\n        return require('../../assets/images/saints/16-Nov.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '20-11': // November 20 - St. Archangel Michael (Evening)\n      try {\n        return require('../../assets/images/saints/20-Nov.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '21-11': // November 21 - St. Archangel Michael\n      try {\n        return require('../../assets/images/saints/21-Nov.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '23-11': // November 23\n      try {\n        return require('../../assets/images/saints/23-Nov.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '30-11': // November 30\n      try {\n        return require('../../assets/images/saints/30-Nov.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    // December\n    case '3-12': // December 3 - Prechista (Evening)\n      try {\n        return require('../../assets/images/saints/03-Dec.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '4-12': // December 4 - Prechista\n      try {\n        return require('../../assets/images/saints/04-Dec.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '7-12': // December 7\n      try {\n        return require('../../assets/images/saints/07-Dec.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '14-12': // December 14\n      try {\n        return require('../../assets/images/saints/14-Dec.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '18-12': // December 18 - St. Nikolaj (Evening)\n      try {\n        return require('../../assets/images/saints/18-Dec.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '19-12': // December 19 - St. Nikolaj\n      try {\n        return require('../../assets/images/saints/19-Dec.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '21-12': // December 21\n      try {\n        return require('../../assets/images/saints/21-Dec.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n    case '28-12': // December 28\n      try {\n        return require('../../assets/images/saints/28-Dec.jpg');\n      } catch (error) {\n        console.error('Error loading image:', error);\n        return null;\n      }\n\n    default:\n      // Special case for Christmas\n      if (event.name.includes('БОЖИК') || event.name.includes('Рождество Христово')) {\n        try {\n          return require('../../assets/images/Bozik.jpg');\n        } catch (error) {\n          console.error('Error loading Bozik image:', error);\n          return null;\n        }\n      }\n      return null;\n  }\n};\n\nconst LoadingScreen = () => {\n  return (\n    <View style={styles.loadingContainer}>\n      <Image\n        source={require('../../assets/images/Loading screen.jpg')}\n        style={styles.loadingBackground}\n        resizeMode=\"cover\"\n        onError={(error) => console.error('Error loading image:', error)}\n      />\n      <View style={[styles.dimOverlay, { backgroundColor: 'rgba(0, 0, 0, 0.7)' }]} />\n      <View style={styles.loadingContent}>\n        <View style={styles.churchInfoContainer}>\n          <Text style={styles.churchName}>Македонска Православна Црковна Општина</Text>\n          <Text style={styles.churchName}>Св. Наум Охридски, Швајцарија</Text>\n          <Text style={styles.churchAddress}>CH – 6234 Триенген</Text>\n        </View>\n        <ActivityIndicator size=\"large\" color={COLORS.TEXT_LIGHT} />\n        <Text style={styles.loadingText}>Се вчитува...</Text>\n      </View>\n    </View>\n  );\n};\n\nexport const CalendarScreen = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [events, setEvents] = useState<ChurchEvent[]>(CHURCH_EVENTS_2025);\n  const [serviceTypeFilters, setServiceTypeFilters] = useState<ServiceType[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedServiceTypes, setSelectedServiceTypes] = useState<Set<ServiceType>>(new Set());\n  const [contactDialogVisible, setContactDialogVisible] = useState(false);\n  \n  const scrollY = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 7000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Group and filter events\n  const filteredAndGroupedEvents = React.useMemo(() => {\n    return CHURCH_EVENTS_2025\n      .filter(event => {\n        const matchesSearch = event.name.toLowerCase().includes(searchQuery.toLowerCase());\n        const matchesType = selectedServiceTypes.size === 0 || selectedServiceTypes.has(event.serviceType);\n        return matchesSearch && matchesType;\n      })\n      .reduce((acc, event) => {\n        const month = event.date.getMonth();\n        if (!acc[month]) {\n          acc[month] = [];\n        }\n        acc[month].push(event);\n        return acc;\n      }, {} as Record<number, ChurchEvent[]>);\n  }, [searchQuery, selectedServiceTypes]);\n\n  if (isLoading) {\n    return <LoadingScreen />;\n  }\n\n  const toggleServiceTypeFilter = (serviceType: ServiceType) => {\n    const newSelectedTypes = new Set(selectedServiceTypes);\n    if (newSelectedTypes.has(serviceType)) {\n      newSelectedTypes.delete(serviceType);\n    } else {\n      newSelectedTypes.add(serviceType);\n    }\n    setSelectedServiceTypes(newSelectedTypes);\n  };\n\n  // Month names in Macedonian\n  const monthNames = [\n    'Јануари', 'Февруари', 'Март', 'Април', 'Мај', 'Јуни',\n    'Јули', 'Август', 'Септември', 'Октомври', 'Ноември', 'Декември'\n  ];\n\n  const renderServiceTypeFilters = () => (\n    <ScrollView \n      horizontal \n      showsHorizontalScrollIndicator={false}\n      style={styles.filterContainer}\n    >\n      {Object.entries(SERVICE_TYPE_COLORS).map(([type, color]) => (\n        <Chip\n          key={type}\n          selected={selectedServiceTypes.has(type as ServiceType)}\n          onPress={() => toggleServiceTypeFilter(type as ServiceType)}\n          style={[styles.filterChip, { backgroundColor: selectedServiceTypes.has(type as ServiceType) ? color : COLORS.SURFACE }]}\n          textStyle={{ color: selectedServiceTypes.has(type as ServiceType) ? COLORS.TEXT_LIGHT : COLORS.TEXT }}\n          icon={() => (\n            <MaterialCommunityIcons\n              name={SERVICE_TYPE_ICONS[type as ServiceType]}\n              size={16}\n              color={selectedServiceTypes.has(type as ServiceType) ? COLORS.TEXT_LIGHT : COLORS.TEXT}\n            />\n          )}\n        >\n          {getServiceTypeLabel(type as ServiceType)}\n        </Chip>\n      ))}\n    </ScrollView>\n  );\n\n  const showContactInfo = () => {\n    setContactDialogVisible(true);\n  };\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <View style={styles.mainContainer}>\n        <Image\n          source={require('../../assets/images/background_app.jpg')}\n          style={styles.backgroundImage}\n          resizeMode=\"cover\"\n        />\n        <View style={styles.overlay} />\n        \n        <ScrollView \n          style={styles.scrollView}\n          contentContainerStyle={styles.scrollContent}\n        >\n          <Searchbar\n            placeholder=\"Пребарувај настани\"\n            onChangeText={setSearchQuery}\n            value={searchQuery}\n            style={styles.searchBar}\n          />\n\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[styles.socialButton, { backgroundColor: '#4267B2' }]}\n              onPress={() => SocialMediaService.openFacebookGroup()}\n            >\n              <MaterialCommunityIcons name=\"facebook\" size={24} color={COLORS.TEXT_LIGHT} />\n              <Text style={styles.buttonText}>Facebook</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={[styles.socialButton, { backgroundColor: COLORS.PRIMARY }]}\n              onPress={showContactInfo}\n            >\n              <MaterialCommunityIcons name=\"phone\" size={24} color={COLORS.TEXT_LIGHT} />\n              <Text style={styles.buttonText}>Контакт</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={[styles.socialButton, { backgroundColor: COLORS.TERTIARY }]}\n              onPress={() => SocialMediaService.openWebsite()}\n            >\n              <MaterialCommunityIcons name=\"web\" size={24} color={COLORS.TEXT_LIGHT} />\n              <Text style={styles.buttonText}>Веб-страна</Text>\n            </TouchableOpacity>\n          </View>\n          \n          {renderServiceTypeFilters()}\n          \n          {Object.entries(filteredAndGroupedEvents).map(([month, monthEvents]) => (\n            <View key={month} style={styles.monthSection}>\n              <Surface style={styles.monthHeader}>\n                <Title style={styles.monthTitle}>{monthNames[parseInt(month)]}</Title>\n              </Surface>\n              <View style={styles.eventList}>\n                {monthEvents\n                  .sort((a, b) => a.date.getTime() - b.date.getTime())\n                  .map((event, index) => (\n                    <Card \n                      key={`${month}-${index}`} \n                      style={[\n                        styles.eventCard,\n                        { borderLeftColor: SERVICE_TYPE_COLORS[event.serviceType] }\n                      ]}\n                    >\n                      <Card.Content>\n                        <View style={styles.cardHeader}>\n                          <View style={styles.dateContainer}>\n                            <Text style={styles.dateDay}>\n                              {format(event.date, 'dd', { locale: mk })}\n                            </Text>\n                            <Text style={styles.dateMonth}>\n                              {format(event.date, 'MMM', { locale: mk })}\n                            </Text>\n                          </View>\n                          <View style={styles.eventInfo}>\n                            <Title style={styles.eventTitle}>{event.name}</Title>\n                            <View style={styles.serviceTypeContainer}>\n                              <MaterialCommunityIcons \n                                name={SERVICE_TYPE_ICONS[event.serviceType]} \n                                size={16} \n                                color={SERVICE_TYPE_COLORS[event.serviceType]} \n                              />\n                              <Text style={[\n                                styles.serviceType,\n                                { color: SERVICE_TYPE_COLORS[event.serviceType] }\n                              ]}>\n                                {getServiceTypeLabel(event.serviceType)}\n                              </Text>\n                            </View>\n                            <Text style={styles.time}>\n                              {event.description || `Време: ${event.time}`}\n                            </Text>\n                          </View>\n                          <View style={styles.rightContainer}>\n                            <View style={styles.imageContainer}>\n                              {(() => {\n                                const eventImage = getEventImage(event);\n                                return eventImage ? (\n                                  <Image \n                                    source={eventImage}\n                                    style={styles.eventImage}\n                                    resizeMode=\"cover\"\n                                  />\n                                ) : (\n                                  <MaterialCommunityIcons \n                                    name={SERVICE_TYPE_ICONS[event.serviceType]}\n                                    size={40}\n                                    color={SERVICE_TYPE_COLORS[event.serviceType]}\n                                    style={styles.fallbackIcon}\n                                  />\n                                );\n                              })()}\n                            </View>\n                          </View>\n                        </View>\n                      </Card.Content>\n                    </Card>\n                  ))}\n              </View>\n            </View>\n          ))}\n        </ScrollView>\n\n        <Portal>\n          <Dialog\n            visible={contactDialogVisible}\n            onDismiss={() => setContactDialogVisible(false)}\n            style={styles.dialog}\n          >\n            <Dialog.Title style={{ color: COLORS.PRIMARY, fontSize: 20, fontWeight: 'bold' }}>\n              Контакт Информации\n            </Dialog.Title>\n            <Dialog.Content>\n              <Text style={{\n                fontSize: 16,\n                lineHeight: 24,\n                marginBottom: 16,\n                color: COLORS.TEXT,\n              }}>\n                Браќа и Сестри, со Благослов на Неговото високопреосвештенство Митрополит Европски Пимен, Празниците кои според календарот паѓаат во работни денови, светите Богослужби се отслужуваат пред денот на празникот со почеток во 19.00 ч, според годишниот план за Богослужби.\n              </Text>\n              <Text style={{\n                fontSize: 16,\n                lineHeight: 24,\n                marginTop: 8,\n                fontWeight: 'bold',\n                color: COLORS.PRIMARY,\n              }}>\n                Свештеник: Протoпрезвитер о. Горан Мантароски: 078 646 83 07\n              </Text>\n            </Dialog.Content>\n            <Dialog.Actions>\n              <Button onPress={() => setContactDialogVisible(false)}>Затвори</Button>\n              <Button onPress={() => Linking.openURL('tel:+38978646837')}>Повикај</Button>\n            </Dialog.Actions>\n          </Dialog>\n        </Portal>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: COLORS.BACKGROUND,\n  },\n  mainContainer: {\n    flex: 1,\n  },\n  backgroundImage: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    opacity: 0.15,\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    paddingVertical: 16,\n  },\n  searchBar: {\n    marginHorizontal: 16,\n    marginBottom: 12,\n    borderRadius: 12,\n    elevation: 2,\n    backgroundColor: COLORS.SURFACE,\n  },\n  monthSection: {\n    marginBottom: 20,\n  },\n  monthHeader: {\n    backgroundColor: COLORS.PRIMARY,\n    marginHorizontal: 16,\n    marginBottom: 16,\n    borderRadius: 20,\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  monthTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: COLORS.TEXT_LIGHT,\n    textAlign: 'center',\n    padding: 16,\n  },\n  eventList: {\n    paddingHorizontal: 16,\n  },\n  eventCard: {\n    marginBottom: 12,\n    padding: 0,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: COLORS.BORDER,\n    borderRadius: 12,\n    backgroundColor: '#F8F4E9', // Warm parchment color\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 2,\n    borderLeftWidth: 4, // Thicker left border for service type\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n    backgroundColor: 'rgba(248, 244, 233, 0.7)', // Slightly lighter parchment\n  },\n  dateContainer: {\n    alignItems: 'center',\n    marginRight: 16,\n    minWidth: 60,\n    backgroundColor: COLORS.PRIMARY,\n    padding: 10,\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: '#D4AF37', // Byzantine gold\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  dateDay: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: COLORS.TEXT_LIGHT,\n  },\n  dateMonth: {\n    fontSize: 14,\n    color: COLORS.TEXT_LIGHT,\n    textTransform: 'uppercase',\n    fontWeight: '600',\n    marginTop: 2,\n  },\n  eventInfo: {\n    flex: 1,\n    paddingRight: 12,\n  },\n  eventTitle: {\n    fontSize: 20,\n    marginBottom: 8,\n    color: COLORS.PRIMARY,\n    fontWeight: '700',\n    letterSpacing: 0.5,\n  },\n  serviceTypeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    backgroundColor: COLORS.BACKGROUND,\n    padding: 8,\n    borderRadius: 12,\n    alignSelf: 'flex-start',\n    borderWidth: 1,\n    borderColor: COLORS.BORDER,\n  },\n  serviceType: {\n    fontSize: 15,\n    marginLeft: 8,\n    fontWeight: '600',\n    color: COLORS.TEXT,\n  },\n  time: {\n    fontSize: 15,\n    color: COLORS.TERTIARY,\n    fontWeight: '600',\n  },\n  rightContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    paddingLeft: 4,\n    marginVertical: -8,\n    marginRight: -4,\n  },\n  imageContainer: {\n    width: 120,\n    height: 120,\n    borderRadius: 15,\n    marginBottom: 0,\n    backgroundColor: COLORS.BACKGROUND,\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    borderWidth: 2,\n    borderColor: COLORS.BORDER,\n  },\n  eventImage: {\n    width: '100%',\n    height: '100%',\n  },\n  fallbackIcon: {\n    opacity: 0.7,\n    fontSize: 70,\n    color: COLORS.PRIMARY,\n  },\n  loadingContainer: {\n    flex: 1,\n    backgroundColor: COLORS.PRIMARY,\n  },\n  loadingBackground: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n  dimOverlay: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n  },\n  loadingContent: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 2,\n  },\n  loadingText: {\n    color: COLORS.TEXT_LIGHT,\n    marginTop: 16,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  filterContainer: {\n    marginBottom: 16,\n    paddingHorizontal: 16,\n  },\n  filterChip: {\n    borderWidth: 1,\n    borderColor: COLORS.BORDER,\n    elevation: 2,\n    backgroundColor: COLORS.SURFACE,\n  },\n  dialog: {\n    backgroundColor: COLORS.SURFACE,\n    margin: 20,\n    borderRadius: 12,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n    marginBottom: 16,\n  },\n  socialButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 12,\n    borderRadius: 12,\n    flex: 1,\n    marginHorizontal: 4,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  buttonText: {\n    color: COLORS.TEXT_LIGHT,\n    marginLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n  churchInfoContainer: {\n    alignItems: 'center',\n    marginBottom: 40,\n  },\n  churchName: {\n    color: COLORS.TEXT_LIGHT,\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 4,\n  },\n  churchAddress: {\n    color: COLORS.TEXT_LIGHT,\n    fontSize: 18,\n    marginTop: 4,\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { List, Switch, Title, ActivityIndicator, Snackbar, Divider } from 'react-native-paper';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport NotificationService from '../services/NotificationService';\nimport { COLORS } from '../constants/theme';\n\nconst NOTIFICATION_SETTINGS_KEY = '@notification_settings';\n\nexport const NotificationSettingsScreen = () => {\n  const [settings, setSettings] = useState({\n    enabled: true,\n    weekBefore: false,\n    dayBefore: true,\n    hourBefore: true\n  });\n  const [loading, setLoading] = useState(true);\n  const [snackbarVisible, setSnackbarVisible] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  useEffect(() => {\n    loadSettings();\n  }, []);\n\n  const loadSettings = async () => {\n    try {\n      const savedSettings = await NotificationService.getNotificationSettings();\n      setSettings(savedSettings);\n    } catch (error) {\n      console.error('Error loading settings:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSettingChange = async (key: string, value: boolean) => {\n    try {\n      const newSettings = { ...settings, [key]: value };\n      setSettings(newSettings);\n      await NotificationService.updateNotificationSettings(newSettings);\n      \n      setSnackbarMessage('Поставките се зачувани');\n      setSnackbarVisible(true);\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      setSnackbarMessage('Грешка при зачувување на поставките');\n      setSnackbarVisible(true);\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={[styles.container, styles.centered]}>\n        <ActivityIndicator size=\"large\" color={COLORS.PRIMARY} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Title style={styles.title}>Поставки за Известувања</Title>\n      \n      <List.Section>\n        <List.Item\n          title=\"Известувања\"\n          description=\"Вклучи/исклучи сите известувања\"\n          right={() => (\n            <Switch\n              value={settings.enabled}\n              onValueChange={(value) => handleSettingChange('enabled', value)}\n            />\n          )}\n        />\n\n        <Divider />\n        \n        <List.Subheader>Време на известување пред настан</List.Subheader>\n        \n        <List.Item\n          title=\"1 недела пред\"\n          description=\"Добивај известување една недела пред настанот\"\n          right={() => (\n            <Switch\n              value={settings.weekBefore}\n              onValueChange={(value) => handleSettingChange('weekBefore', value)}\n              disabled={!settings.enabled}\n            />\n          )}\n        />\n\n        <List.Item\n          title=\"1 ден пред\"\n          description=\"Добивај известување еден ден пред настанот\"\n          right={() => (\n            <Switch\n              value={settings.dayBefore}\n              onValueChange={(value) => handleSettingChange('dayBefore', value)}\n              disabled={!settings.enabled}\n            />\n          )}\n        />\n\n        <List.Item\n          title=\"1 час пред\"\n          description=\"Добивај известување еден час пред настанот\"\n          right={() => (\n            <Switch\n              value={settings.hourBefore}\n              onValueChange={(value) => handleSettingChange('hourBefore', value)}\n              disabled={!settings.enabled}\n            />\n          )}\n        />\n      </List.Section>\n\n      <Snackbar\n        visible={snackbarVisible}\n        onDismiss={() => setSnackbarVisible(false)}\n        duration={2000}\n        style={styles.snackbar}\n      >\n        {snackbarMessage}\n      </Snackbar>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.BACKGROUND,\n  },\n  centered: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    marginVertical: 16,\n    marginHorizontal: 16,\n    color: COLORS.PRIMARY,\n  },\n  snackbar: {\n    backgroundColor: COLORS.PRIMARY,\n  },\n}); ","import { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst AUTH_TOKEN_KEY = '@auth_token';\nconst ADMIN_CREDENTIALS = {\n  username: 'admin',\n  password: 'SvNaum2025#Triengen'\n};\n\nexport const useAuth = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = await AsyncStorage.getItem(AUTH_TOKEN_KEY);\n      setIsAuthenticated(!!token);\n    } catch (error) {\n      console.error('Error checking auth status:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const login = async (username: string, password: string) => {\n    try {\n      const trimmedUsername = username.trim().toLowerCase();\n      const trimmedPassword = password.trim();\n\n      if (trimmedUsername === ADMIN_CREDENTIALS.username && \n          trimmedPassword === ADMIN_CREDENTIALS.password) {\n        const token = 'admin-token-' + Date.now();\n        await AsyncStorage.setItem(AUTH_TOKEN_KEY, token);\n        setIsAuthenticated(true);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await AsyncStorage.removeItem(AUTH_TOKEN_KEY);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  return {\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n  };\n}; ","import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TextInput, Button, Title, Snackbar } from 'react-native-paper';\nimport { useAuth } from '../../hooks/useAuth';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { AdminStackParamList } from '../../navigation/types';\nimport { COLORS } from '../../constants/theme';\n\ntype AdminLoginScreenProps = {\n  navigation: NativeStackNavigationProp<AdminStackParamList, 'AdminLogin'>;\n};\n\nexport const AdminLoginScreen = ({ navigation }: AdminLoginScreenProps) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const { login } = useAuth();\n\n  const handleLogin = async () => {\n    if (!username || !password) {\n      setError('Внесете корисничко име и лозинка');\n      return;\n    }\n\n    try {\n      const success = await login(username.trim(), password.trim());\n      if (success) {\n        navigation.replace('AdminDashboard');\n      } else {\n        setError('Невалидно корисничко име или лозинка');\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      setError('Грешка при најавување');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Title style={styles.title}>Најава за Администратор</Title>\n      \n      <TextInput\n        label=\"Корисничко име\"\n        value={username}\n        onChangeText={setUsername}\n        style={styles.input}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n      />\n      \n      <TextInput\n        label=\"Лозинка\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n        style={styles.input}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n      />\n      \n      <Button \n        mode=\"contained\" \n        onPress={handleLogin}\n        style={styles.button}\n      >\n        Најави се\n      </Button>\n\n      <Snackbar\n        visible={!!error}\n        onDismiss={() => setError('')}\n        duration={3000}\n        style={styles.snackbar}\n      >\n        {error}\n      </Snackbar>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center',\n    backgroundColor: COLORS.BACKGROUND,\n  },\n  title: {\n    marginBottom: 24,\n    textAlign: 'center',\n    color: COLORS.PRIMARY,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  button: {\n    marginTop: 8,\n    backgroundColor: COLORS.PRIMARY,\n  },\n  snackbar: {\n    backgroundColor: COLORS.ERROR,\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport { View, ScrollView, StyleSheet, Linking } from 'react-native';\nimport { Card, Title, Paragraph, Button, Portal, Dialog, TextInput, List, Switch, Divider, IconButton } from 'react-native-paper';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useAuth } from '../../hooks/useAuth';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { AdminStackParamList } from '../../navigation/types';\nimport { COLORS } from '../../constants/theme';\nimport NotificationService from '../../services/NotificationService';\nimport { ChurchEvent, CHURCH_EVENTS_2025 } from '../../services/ChurchCalendarService';\nimport { format } from 'date-fns';\nimport { mk } from 'date-fns/locale';\nimport SocialMediaService from '../../services/SocialMediaService';\n\ntype AdminDashboardScreenProps = {\n  navigation: NativeStackNavigationProp<AdminStackParamList, 'AdminDashboard'>;\n};\n\ntype EventNotificationContent = {\n  eventId: string;\n  weekBeforeMessage?: string;\n  dayBeforeMessage?: string;\n  hourBeforeMessage?: string;\n};\n\nexport const AdminDashboardScreen = ({ navigation }: AdminDashboardScreenProps) => {\n  const { logout } = useAuth();\n  const [notificationDialogVisible, setNotificationDialogVisible] = useState(false);\n  const [automatedSettingsVisible, setAutomatedSettingsVisible] = useState(false);\n  const [eventContentDialogVisible, setEventContentDialogVisible] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState<ChurchEvent | null>(null);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [automatedSettings, setAutomatedSettings] = useState({\n    weekBefore: true,\n    dayBefore: true,\n    hourBefore: true\n  });\n  const [eventNotifications, setEventNotifications] = useState<EventNotificationContent[]>([]);\n  const [customMessages, setCustomMessages] = useState({\n    weekBefore: '',\n    dayBefore: '',\n    hourBefore: ''\n  });\n\n  useEffect(() => {\n    loadEventNotifications();\n  }, []);\n\n  const loadEventNotifications = async () => {\n    try {\n      const savedNotifications = await AsyncStorage.getItem('@event_notifications');\n      if (savedNotifications) {\n        setEventNotifications(JSON.parse(savedNotifications));\n      }\n    } catch (error) {\n      console.error('Error loading event notifications:', error);\n    }\n  };\n\n  const handleLogout = async () => {\n    await logout();\n    navigation.replace('AdminLogin');\n  };\n\n  const handleSendNotification = async () => {\n    if (notificationMessage.trim()) {\n      try {\n        await NotificationService.sendCustomNotification({\n          title: 'Важно Известување',\n          message: notificationMessage,\n          date: new Date(),\n          urgent: true\n        });\n        setNotificationMessage('');\n        setNotificationDialogVisible(false);\n      } catch (error) {\n        console.error('Error sending notification:', error);\n      }\n    }\n  };\n\n  const handleAutomatedSettingsUpdate = async () => {\n    try {\n      await NotificationService.updateNotificationSettings({\n        enabled: true,\n        ...automatedSettings\n      });\n      await NotificationService.scheduleYearEvents();\n      setAutomatedSettingsVisible(false);\n    } catch (error) {\n      console.error('Error updating automated settings:', error);\n    }\n  };\n\n  const handleEventSelect = (event: ChurchEvent) => {\n    setSelectedEvent(event);\n    const existingContent = eventNotifications.find(n => n.eventId === event.date.toISOString());\n    if (existingContent) {\n      setCustomMessages({\n        weekBefore: existingContent.weekBeforeMessage || '',\n        dayBefore: existingContent.dayBeforeMessage || '',\n        hourBefore: existingContent.hourBeforeMessage || ''\n      });\n    } else {\n      setCustomMessages({\n        weekBefore: '',\n        dayBefore: '',\n        hourBefore: ''\n      });\n    }\n    setEventContentDialogVisible(true);\n  };\n\n  const saveEventContent = async () => {\n    if (!selectedEvent) return;\n\n    const eventId = selectedEvent.date.toISOString();\n    const updatedNotifications = eventNotifications.filter(n => n.eventId !== eventId);\n    updatedNotifications.push({\n      eventId,\n      weekBeforeMessage: customMessages.weekBefore,\n      dayBeforeMessage: customMessages.dayBefore,\n      hourBeforeMessage: customMessages.hourBefore\n    });\n\n    try {\n      await AsyncStorage.setItem('@event_notifications', JSON.stringify(updatedNotifications));\n      setEventNotifications(updatedNotifications);\n      setEventContentDialogVisible(false);\n    } catch (error) {\n      console.error('Error saving event content:', error);\n    }\n  };\n\n  const renderEventContentDialog = () => (\n    <Dialog\n      visible={eventContentDialogVisible}\n      onDismiss={() => setEventContentDialogVisible(false)}\n      style={styles.dialog}\n    >\n      <Dialog.Title>\n        {selectedEvent ? format(selectedEvent.date, 'dd MMMM yyyy', { locale: mk }) : ''}\n      </Dialog.Title>\n      <Dialog.Content>\n        <Title style={styles.eventTitle}>{selectedEvent?.name}</Title>\n        \n        {automatedSettings.weekBefore && (\n          <View style={styles.messageInput}>\n            <Title style={styles.messageTitle}>Порака 1 недела пред</Title>\n            <TextInput\n              value={customMessages.weekBefore}\n              onChangeText={text => setCustomMessages({...customMessages, weekBefore: text})}\n              multiline\n              numberOfLines={2}\n              placeholder=\"Пример: Следната недела во {време} ќе се одржи {настан}\"\n            />\n          </View>\n        )}\n\n        {automatedSettings.dayBefore && (\n          <View style={styles.messageInput}>\n            <Title style={styles.messageTitle}>Порака 1 ден пред</Title>\n            <TextInput\n              value={customMessages.dayBefore}\n              onChangeText={text => setCustomMessages({...customMessages, dayBefore: text})}\n              multiline\n              numberOfLines={2}\n              placeholder=\"Пример: Утре во {време} ќе се одржи {настан}\"\n            />\n          </View>\n        )}\n\n        {automatedSettings.hourBefore && (\n          <View style={styles.messageInput}>\n            <Title style={styles.messageTitle}>Порака 1 час пред</Title>\n            <TextInput\n              value={customMessages.hourBefore}\n              onChangeText={text => setCustomMessages({...customMessages, hourBefore: text})}\n              multiline\n              numberOfLines={2}\n              placeholder=\"Пример: За 1 час започнува {настан}\"\n            />\n          </View>\n        )}\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button onPress={() => setEventContentDialogVisible(false)}>Откажи</Button>\n        <Button onPress={saveEventContent}>Зачувај</Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n\n  return (\n    <ScrollView style={styles.container}>\n      <Title style={styles.title}>Администраторски Панел</Title>\n\n      <Card style={styles.card} onPress={() => navigation.navigate('AddEvent')}>\n        <Card.Content>\n          <Title>Додади Настан</Title>\n          <Paragraph>Креирај нов настан во календарот</Paragraph>\n        </Card.Content>\n      </Card>\n\n      <Card style={styles.card} onPress={() => navigation.navigate('ManageCalendar')}>\n        <Card.Content>\n          <Title>Годишен Календар</Title>\n          <Paragraph>Измени ги настаните во годишниот календар</Paragraph>\n        </Card.Content>\n      </Card>\n\n      <Card style={styles.card} onPress={() => setAutomatedSettingsVisible(true)}>\n        <Card.Content>\n          <Title>Автоматски Известувања</Title>\n          <Paragraph>Постави автоматски известувања за сите настани во годината</Paragraph>\n        </Card.Content>\n      </Card>\n\n      <Card style={styles.card} onPress={() => navigation.navigate('SpecialEvents')}>\n        <Card.Content>\n          <Title>Специјални Настани</Title>\n          <Paragraph>Управувај со пикници и специјални собири</Paragraph>\n        </Card.Content>\n      </Card>\n\n      <Card style={styles.card} onPress={() => navigation.navigate('ManageLocations', { eventId: undefined })}>\n        <Card.Content>\n          <Title>Локации</Title>\n          <Paragraph>Додади и измени локации за настани</Paragraph>\n        </Card.Content>\n      </Card>\n\n      <Card style={styles.card} onPress={() => setNotificationDialogVisible(true)}>\n        <Card.Content>\n          <Title>Известувања</Title>\n          <Paragraph>Испрати известувања до корисниците</Paragraph>\n        </Card.Content>\n      </Card>\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title>Социјални Мрежи</Title>\n          <View style={styles.socialButtons}>\n            <Button \n              mode=\"contained\" \n              icon=\"facebook\"\n              onPress={SocialMediaService.openFacebookGroup}\n              style={[styles.socialButton, { backgroundColor: '#4267B2' }]}\n            >\n              Facebook Група\n            </Button>\n            <Button \n              mode=\"contained\"\n              icon=\"web\"\n              onPress={SocialMediaService.openWebsite}\n              style={[styles.socialButton, { backgroundColor: COLORS.PRIMARY }]}\n            >\n              Веб-страница\n            </Button>\n          </View>\n        </Card.Content>\n      </Card>\n\n      <Button \n        mode=\"outlined\" \n        onPress={handleLogout}\n        style={styles.logoutButton}\n      >\n        Одјави се\n      </Button>\n\n      <Portal>\n        <Dialog\n          visible={notificationDialogVisible}\n          onDismiss={() => setNotificationDialogVisible(false)}\n          style={styles.dialog}\n        >\n          <Dialog.Title>Испрати Известување</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Порака\"\n              value={notificationMessage}\n              onChangeText={setNotificationMessage}\n              multiline\n              numberOfLines={3}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNotificationDialogVisible(false)}>Откажи</Button>\n            <Button onPress={handleSendNotification}>Испрати</Button>\n          </Dialog.Actions>\n        </Dialog>\n\n        <Dialog\n          visible={automatedSettingsVisible}\n          onDismiss={() => setAutomatedSettingsVisible(false)}\n          style={[styles.dialog, styles.largeDialog]}\n        >\n          <Dialog.Title>Автоматски Известувања за Настани</Dialog.Title>\n          <Dialog.ScrollArea>\n            <ScrollView>\n              <View style={styles.settingsSection}>\n                <Title style={styles.sectionTitle}>Време на Известувања</Title>\n                <List.Item\n                  title=\"1 недела пред настан\"\n                  right={props => (\n                    <Switch\n                      {...props}\n                      value={automatedSettings.weekBefore}\n                      onValueChange={value => \n                        setAutomatedSettings({...automatedSettings, weekBefore: value})\n                      }\n                    />\n                  )}\n                />\n                <List.Item\n                  title=\"1 ден пред настан\"\n                  right={props => (\n                    <Switch\n                      {...props}\n                      value={automatedSettings.dayBefore}\n                      onValueChange={value => \n                        setAutomatedSettings({...automatedSettings, dayBefore: value})\n                      }\n                    />\n                  )}\n                />\n                <List.Item\n                  title=\"1 час пред настан\"\n                  right={props => (\n                    <Switch\n                      {...props}\n                      value={automatedSettings.hourBefore}\n                      onValueChange={value => \n                        setAutomatedSettings({...automatedSettings, hourBefore: value})\n                      }\n                    />\n                  )}\n                />\n              </View>\n\n              <Divider style={styles.divider} />\n\n              <View style={styles.settingsSection}>\n                <Title style={styles.sectionTitle}>Настани и Содржина</Title>\n                {CHURCH_EVENTS_2025.map((event, index) => (\n                  <List.Item\n                    key={index}\n                    title={event.name}\n                    description={format(event.date, 'dd MMMM yyyy', { locale: mk })}\n                    right={props => (\n                      <IconButton\n                        {...props}\n                        icon=\"pencil\"\n                        onPress={() => handleEventSelect(event)}\n                      />\n                    )}\n                  />\n                ))}\n              </View>\n            </ScrollView>\n          </Dialog.ScrollArea>\n          <Dialog.Actions>\n            <Button onPress={() => setAutomatedSettingsVisible(false)}>Откажи</Button>\n            <Button onPress={handleAutomatedSettingsUpdate}>Зачувај и Постави</Button>\n          </Dialog.Actions>\n        </Dialog>\n\n        {renderEventContentDialog()}\n      </Portal>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: COLORS.BACKGROUND,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 24,\n    color: COLORS.PRIMARY,\n    textAlign: 'center',\n  },\n  card: {\n    marginBottom: 16,\n    elevation: 2,\n  },\n  logoutButton: {\n    marginTop: 24,\n    marginBottom: 40,\n  },\n  dialog: {\n    backgroundColor: COLORS.SURFACE,\n    borderRadius: 8,\n  },\n  largeDialog: {\n    maxHeight: '80%',\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  settingsSection: {\n    padding: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    marginBottom: 16,\n    color: COLORS.PRIMARY,\n  },\n  eventTitle: {\n    fontSize: 16,\n    marginBottom: 16,\n  },\n  messageInput: {\n    marginBottom: 16,\n  },\n  messageTitle: {\n    fontSize: 14,\n    marginBottom: 8,\n  },\n  socialButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 8,\n  },\n  socialButton: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport { View, ScrollView, StyleSheet } from 'react-native';\nimport { \n  Title, \n  Card, \n  Button, \n  Portal, \n  Dialog, \n  TextInput,\n  List,\n  IconButton,\n  Divider,\n  Searchbar,\n  Menu,\n  Text\n} from 'react-native-paper';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { AdminStackParamList } from '../../navigation/types';\nimport { COLORS } from '../../constants/theme';\nimport { ChurchEvent, CHURCH_EVENTS_2025, ServiceType } from '../../services/ChurchCalendarService';\nimport { format } from 'date-fns';\nimport { mk } from 'date-fns/locale';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst CALENDAR_STORAGE_KEY = '@church_calendar';\n\ntype ManageCalendarScreenProps = {\n  navigation: NativeStackNavigationProp<AdminStackParamList, 'ManageCalendar'>;\n};\n\nexport const ManageCalendarScreen: React.FC<ManageCalendarScreenProps> = ({ navigation }) => {\n  const [events, setEvents] = useState<ChurchEvent[]>(CHURCH_EVENTS_2025);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [editDialogVisible, setEditDialogVisible] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState<ChurchEvent | null>(null);\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [showTimePicker, setShowTimePicker] = useState(false);\n  const [editedEvent, setEditedEvent] = useState<Partial<ChurchEvent>>({});\n  const [serviceTypeMenuVisible, setServiceTypeMenuVisible] = useState(false);\n\n  useEffect(() => {\n    loadCalendar();\n  }, []);\n\n  const loadCalendar = async () => {\n    try {\n      const savedCalendar = await AsyncStorage.getItem(CALENDAR_STORAGE_KEY);\n      if (savedCalendar) {\n        const parsedCalendar = JSON.parse(savedCalendar);\n        // Convert string dates back to Date objects\n        const eventsWithDates = parsedCalendar.map((event: any) => ({\n          ...event,\n          date: new Date(event.date)\n        }));\n        setEvents(eventsWithDates);\n      }\n    } catch (error) {\n      console.error('Error loading calendar:', error);\n    }\n  };\n\n  const saveCalendar = async (updatedEvents: ChurchEvent[]) => {\n    try {\n      await AsyncStorage.setItem(CALENDAR_STORAGE_KEY, JSON.stringify(updatedEvents));\n      setEvents(updatedEvents);\n    } catch (error) {\n      console.error('Error saving calendar:', error);\n    }\n  };\n\n  const handleEditEvent = (event: ChurchEvent) => {\n    setSelectedEvent(event);\n    setEditedEvent({\n      name: event.name,\n      date: event.date,\n      time: event.time,\n      serviceType: event.serviceType,\n      description: event.description\n    });\n    setEditDialogVisible(true);\n  };\n\n  const handleSaveEvent = async () => {\n    if (!selectedEvent || !editedEvent.name || !editedEvent.date || !editedEvent.time) return;\n\n    const updatedEvents = events.map(event => \n      event === selectedEvent ? { ...event, ...editedEvent } as ChurchEvent : event\n    );\n\n    await saveCalendar(updatedEvents);\n    setEditDialogVisible(false);\n  };\n\n  const handleDeleteEvent = async (eventToDelete: ChurchEvent) => {\n    const updatedEvents = events.filter(event => event !== eventToDelete);\n    await saveCalendar(updatedEvents);\n  };\n\n  const handleAddEvent = () => {\n    setSelectedEvent(null);\n    setEditedEvent({\n      name: '',\n      date: new Date(),\n      time: '09:00',\n      serviceType: 'LITURGY',\n      description: ''\n    });\n    setEditDialogVisible(true);\n  };\n\n  const filteredEvents = events\n    .filter(event => \n      event.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      format(event.date, 'dd MMMM yyyy', { locale: mk }).toLowerCase().includes(searchQuery.toLowerCase())\n    )\n    .sort((a, b) => a.date.getTime() - b.date.getTime());\n\n  const getServiceTypeLabel = (type: ServiceType): string => {\n    switch (type) {\n      case 'LITURGY':\n        return 'Литургија';\n      case 'EVENING_SERVICE':\n        return 'Вечерна Богослужба';\n      case 'CHURCH_OPEN':\n        return 'Црквата е отворена';\n      case 'PICNIC':\n        return 'Пикник';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Title style={styles.title}>Годишен Календар</Title>\n\n      <Searchbar\n        placeholder=\"Пребарувај настани\"\n        onChangeText={setSearchQuery}\n        value={searchQuery}\n        style={styles.searchBar}\n      />\n\n      <Button\n        mode=\"contained\"\n        icon=\"plus\"\n        onPress={handleAddEvent}\n        style={styles.addButton}\n      >\n        Додади Нов Настан\n      </Button>\n\n      <ScrollView>\n        {filteredEvents.map((event, index) => (\n          <Card key={index} style={styles.eventCard}>\n            <Card.Content>\n              <View style={styles.eventHeader}>\n                <View>\n                  <Title>{event.name}</Title>\n                  <Text>{format(event.date, 'dd MMMM yyyy', { locale: mk })}</Text>\n                  <Text>Време: {event.time}</Text>\n                  <Text>Тип: {getServiceTypeLabel(event.serviceType)}</Text>\n                </View>\n                <View style={styles.actions}>\n                  <IconButton\n                    icon=\"pencil\"\n                    onPress={() => handleEditEvent(event)}\n                  />\n                  <IconButton\n                    icon=\"delete\"\n                    onPress={() => handleDeleteEvent(event)}\n                  />\n                </View>\n              </View>\n              {event.description && (\n                <Text style={styles.description}>{event.description}</Text>\n              )}\n            </Card.Content>\n          </Card>\n        ))}\n      </ScrollView>\n\n      <Portal>\n        <Dialog\n          visible={editDialogVisible}\n          onDismiss={() => setEditDialogVisible(false)}\n          style={styles.dialog}\n        >\n          <Dialog.Title>\n            {selectedEvent ? 'Измени Настан' : 'Нов Настан'}\n          </Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Име на настанот\"\n              value={editedEvent.name}\n              onChangeText={name => setEditedEvent({ ...editedEvent, name })}\n              style={styles.input}\n            />\n\n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowDatePicker(true)}\n              style={styles.input}\n            >\n              {editedEvent.date ? format(editedEvent.date, 'dd.MM.yyyy') : 'Избери датум'}\n            </Button>\n\n            {showDatePicker && (\n              <DateTimePicker\n                value={editedEvent.date || new Date()}\n                mode=\"date\"\n                onChange={(event, date) => {\n                  setShowDatePicker(false);\n                  if (date) {\n                    setEditedEvent({ ...editedEvent, date });\n                  }\n                }}\n              />\n            )}\n\n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowTimePicker(true)}\n              style={styles.input}\n            >\n              {editedEvent.time || 'Избери време'}\n            </Button>\n\n            {showTimePicker && (\n              <DateTimePicker\n                value={new Date(`2025-01-01T${editedEvent.time || '09:00'}`)}\n                mode=\"time\"\n                onChange={(event, date) => {\n                  setShowTimePicker(false);\n                  if (date) {\n                    setEditedEvent({\n                      ...editedEvent,\n                      time: format(date, 'HH:mm')\n                    });\n                  }\n                }}\n              />\n            )}\n\n            <Menu\n              visible={serviceTypeMenuVisible}\n              onDismiss={() => setServiceTypeMenuVisible(false)}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setServiceTypeMenuVisible(true)}\n                  style={styles.input}\n                >\n                  {editedEvent.serviceType ? getServiceTypeLabel(editedEvent.serviceType as ServiceType) : 'Избери тип'}\n                </Button>\n              }\n            >\n              <Menu.Item\n                onPress={() => {\n                  setEditedEvent({ ...editedEvent, serviceType: 'LITURGY' });\n                  setServiceTypeMenuVisible(false);\n                }}\n                title=\"Литургија\"\n              />\n              <Menu.Item\n                onPress={() => {\n                  setEditedEvent({ ...editedEvent, serviceType: 'EVENING_SERVICE' });\n                  setServiceTypeMenuVisible(false);\n                }}\n                title=\"Вечерна Богослужба\"\n              />\n              <Menu.Item\n                onPress={() => {\n                  setEditedEvent({ ...editedEvent, serviceType: 'CHURCH_OPEN' });\n                  setServiceTypeMenuVisible(false);\n                }}\n                title=\"Црквата е отворена\"\n              />\n              <Menu.Item\n                onPress={() => {\n                  setEditedEvent({ ...editedEvent, serviceType: 'PICNIC' });\n                  setServiceTypeMenuVisible(false);\n                }}\n                title=\"Пикник\"\n              />\n            </Menu>\n\n            <TextInput\n              label=\"Опис (опционално)\"\n              value={editedEvent.description}\n              onChangeText={description => setEditedEvent({ ...editedEvent, description })}\n              multiline\n              numberOfLines={3}\n              style={styles.input}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setEditDialogVisible(false)}>Откажи</Button>\n            <Button onPress={handleSaveEvent}>Зачувај</Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Portal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: COLORS.BACKGROUND,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: COLORS.PRIMARY,\n    textAlign: 'center',\n  },\n  searchBar: {\n    marginBottom: 16,\n  },\n  addButton: {\n    marginBottom: 16,\n    backgroundColor: COLORS.PRIMARY,\n  },\n  eventCard: {\n    marginBottom: 12,\n    elevation: 2,\n  },\n  eventHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n  },\n  actions: {\n    flexDirection: 'row',\n  },\n  description: {\n    marginTop: 8,\n    color: COLORS.TEXT,\n  },\n  dialog: {\n    backgroundColor: COLORS.SURFACE,\n  },\n  input: {\n    marginBottom: 16,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, ScrollView, StyleSheet } from 'react-native';\nimport { \n  Card, \n  Title, \n  Paragraph, \n  FAB, \n  Portal, \n  Modal, \n  TextInput,\n  Button,\n  List,\n  IconButton,\n  Divider\n} from 'react-native-paper';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { AdminStackParamList, Location } from '../../navigation/types';\nimport { COLORS } from '../../constants/theme';\n\ntype ManageLocationsScreenProps = {\n  navigation: NativeStackNavigationProp<AdminStackParamList, 'ManageLocations'>;\n};\n\nexport const ManageLocationsScreen: React.FC<ManageLocationsScreenProps> = ({ navigation }) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedLocation, setSelectedLocation] = useState<Location | null>(null);\n  const [locations, setLocations] = useState<Location[]>([]);\n\n  const [newLocation, setNewLocation] = useState<Partial<Location>>({\n    name: '',\n    address: '',\n    coordinates: {\n      latitude: 0,\n      longitude: 0,\n    },\n    facilities: [],\n  });\n\n  const handleCreateLocation = () => {\n    if (!newLocation.name || !newLocation.address) {\n      // Show error\n      return;\n    }\n\n    const location: Location = selectedLocation\n      ? { \n          ...selectedLocation, \n          name: newLocation.name, \n          address: newLocation.address, \n          coordinates: newLocation.coordinates || { latitude: 0, longitude: 0 }\n        }\n      : {\n          id: Date.now().toString(),\n          name: newLocation.name,\n          address: newLocation.address,\n          coordinates: newLocation.coordinates || { latitude: 0, longitude: 0 }\n        };\n\n    if (selectedLocation) {\n      setLocations(locations.map(loc => \n        loc.id === selectedLocation.id ? location : loc\n      ));\n    } else {\n      setLocations([...locations, location]);\n    }\n\n    setModalVisible(false);\n    setSelectedLocation(null);\n    setNewLocation({\n      name: '',\n      address: '',\n      coordinates: {\n        latitude: 0,\n        longitude: 0,\n      },\n      facilities: [],\n    });\n  };\n\n  const handleEditLocation = (location: Location) => {\n    setSelectedLocation(location);\n    setNewLocation(location);\n    setModalVisible(true);\n  };\n\n  const handleDeleteLocation = (locationId: string) => {\n    setLocations(locations.filter(loc => loc.id !== locationId));\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n        <Title style={styles.title}>Локации за Настани</Title>\n\n        {locations.map((location) => (\n          <Card key={location.id} style={styles.locationCard}>\n            <Card.Content>\n              <View style={styles.cardHeader}>\n                <Title>{location.name}</Title>\n                <View style={styles.actions}>\n                  <IconButton\n                    icon=\"pencil\"\n                    onPress={() => handleEditLocation(location)}\n                  />\n                  <IconButton\n                    icon=\"delete\"\n                    onPress={() => handleDeleteLocation(location.id)}\n                  />\n                </View>\n              </View>\n\n              <List.Item\n                title={location.address}\n                left={props => <List.Icon {...props} icon=\"map-marker\" />}\n              />\n\n              {location.directions && (\n                <>\n                  <Divider style={styles.divider} />\n                  <Paragraph>Насоки: {location.directions}</Paragraph>\n                </>\n              )}\n\n              {location.parkingInfo && (\n                <Paragraph>Паркинг: {location.parkingInfo}</Paragraph>\n              )}\n\n              {location.facilities && location.facilities.length > 0 && (\n                <>\n                  <Divider style={styles.divider} />\n                  <Title style={styles.subtitle}>Објекти:</Title>\n                  {location.facilities.map((facility, index) => (\n                    <List.Item\n                      key={index}\n                      title={facility}\n                      left={props => <List.Icon {...props} icon=\"check\" />}\n                    />\n                  ))}\n                </>\n              )}\n            </Card.Content>\n          </Card>\n        ))}\n      </ScrollView>\n\n      <Portal>\n        <Modal\n          visible={modalVisible}\n          onDismiss={() => setModalVisible(false)}\n          contentContainerStyle={styles.modal}\n        >\n          <ScrollView>\n            <Title>{selectedLocation ? 'Измени Локација' : 'Нова Локација'}</Title>\n            \n            <TextInput\n              label=\"Име на локацијата\"\n              value={newLocation.name}\n              onChangeText={name => setNewLocation({ ...newLocation, name })}\n              style={styles.input}\n            />\n\n            <TextInput\n              label=\"Адреса\"\n              value={newLocation.address}\n              onChangeText={address => setNewLocation({ ...newLocation, address })}\n              style={styles.input}\n            />\n\n            <TextInput\n              label=\"Насоки\"\n              value={newLocation.directions}\n              onChangeText={directions => setNewLocation({ ...newLocation, directions })}\n              multiline\n              numberOfLines={3}\n              style={styles.input}\n            />\n\n            <TextInput\n              label=\"Информации за паркинг\"\n              value={newLocation.parkingInfo}\n              onChangeText={parkingInfo => setNewLocation({ ...newLocation, parkingInfo })}\n              style={styles.input}\n            />\n\n            <View style={styles.buttonContainer}>\n              <Button onPress={() => setModalVisible(false)} style={styles.button}>\n                Откажи\n              </Button>\n              <Button \n                mode=\"contained\" \n                onPress={handleCreateLocation}\n                style={styles.button}\n              >\n                {selectedLocation ? 'Зачувај' : 'Креирај'}\n              </Button>\n            </View>\n          </ScrollView>\n        </Modal>\n      </Portal>\n\n      <FAB\n        style={styles.fab}\n        icon=\"plus\"\n        onPress={() => {\n          setSelectedLocation(null);\n          setModalVisible(true);\n        }}\n        label=\"Нова Локација\"\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.BACKGROUND,\n  },\n  title: {\n    margin: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: COLORS.PRIMARY,\n  },\n  subtitle: {\n    fontSize: 18,\n    marginVertical: 8,\n  },\n  locationCard: {\n    margin: 16,\n    elevation: 4,\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n  },\n  divider: {\n    marginVertical: 8,\n  },\n  modal: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    maxHeight: '80%',\n    borderRadius: 8,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginTop: 16,\n  },\n  button: {\n    marginLeft: 8,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: COLORS.PRIMARY,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, ScrollView, StyleSheet } from 'react-native';\nimport { \n  Card, \n  Title, \n  Paragraph, \n  FAB, \n  Portal, \n  Modal, \n  TextInput,\n  Button,\n  List,\n  Chip,\n  Divider,\n  IconButton\n} from 'react-native-paper';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { AdminStackParamList, SpecialEvent, Location } from '../../navigation/types';\nimport { COLORS } from '../../constants/theme';\nimport { format } from 'date-fns';\nimport { mk } from 'date-fns/locale';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAuzPZNsu6Hjvh2pOdW-1SWZhRco9963TQ\",\n  authDomain: \"svnaumkalendar.firebaseapp.com\",\n  projectId: \"svnaumkalendar\",\n  storageBucket: \"svnaumkalendar.firebasestorage.app\",\n  messagingSenderId: \"7954848422\",\n  appId: \"1:7954848422:web:f5e27ccc9e55f7ec5e3267\",\n  measurementId: \"G-24V411LPQX\"\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\ntype SpecialEventsScreenProps = {\n  navigation: NativeStackNavigationProp<AdminStackParamList, 'SpecialEvents'>;\n};\n\nexport const SpecialEventsScreen: React.FC<SpecialEventsScreenProps> = ({ navigation }) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState<SpecialEvent | null>(null);\n  const [events, setEvents] = useState<SpecialEvent[]>([]);\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  const [newEvent, setNewEvent] = useState<Partial<SpecialEvent>>({\n    type: 'PICNIC',\n    name: '',\n    description: '',\n    date: new Date(),\n    requirements: []\n  });\n\n  const handleCreateEvent = () => {\n    if (!newEvent.name || !newEvent.location) {\n      // Show error\n      return;\n    }\n\n    const event: SpecialEvent = selectedEvent\n      ? { \n          ...selectedEvent, \n          name: newEvent.name, \n          date: newEvent.date || new Date(), \n          description: newEvent.description || '',\n          type: newEvent.type || 'PICNIC',\n          location: newEvent.location\n        }\n      : {\n          id: Date.now().toString(),\n          name: newEvent.name,\n          date: newEvent.date || new Date(),\n          description: newEvent.description || '',\n          type: newEvent.type || 'PICNIC',\n          location: newEvent.location\n        };\n\n    if (selectedEvent) {\n      setEvents(events.map(evt => \n        evt.id === selectedEvent.id ? event : evt\n      ));\n    } else {\n      setEvents([...events, event]);\n    }\n\n    setModalVisible(false);\n    setSelectedEvent(null);\n    setNewEvent({\n      type: 'PICNIC',\n      name: '',\n      description: '',\n      date: new Date(),\n      requirements: []\n    });\n  };\n\n  const pickLocation = () => {\n    navigation.navigate('ManageLocations', { eventId: selectedEvent?.id });\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n        <Title style={styles.title}>Специјални Настани</Title>\n\n        {events.map((event) => (\n          <Card key={event.id} style={styles.eventCard}>\n            <Card.Content>\n              <View style={styles.cardHeader}>\n                <Title>{event.name}</Title>\n                <Chip icon=\"calendar\">{format(event.date, 'dd MMMM yyyy', { locale: mk })}</Chip>\n              </View>\n              \n              <Paragraph>{event.description}</Paragraph>\n              \n              <View style={styles.locationInfo}>\n                <List.Item\n                  title={event.location.name}\n                  description={event.location.address}\n                  left={props => <List.Icon {...props} icon=\"map-marker\" />}\n                />\n              </View>\n\n              <Divider style={styles.divider} />\n\n              <View style={styles.chipContainer}>\n                {event.requirements?.map((req, index) => (\n                  <Chip key={index} style={styles.chip} icon=\"information\">\n                    {req}\n                  </Chip>\n                ))}\n              </View>\n\n              <View style={styles.actions}>\n                <IconButton\n                  icon=\"pencil\"\n                  onPress={() => {\n                    setSelectedEvent(event);\n                    setModalVisible(true);\n                  }}\n                />\n                <IconButton\n                  icon=\"bell\"\n                  onPress={() => navigation.navigate('AdminDashboard')}\n                />\n                <IconButton\n                  icon=\"map-marker\"\n                  onPress={() => navigation.navigate('ManageLocations', { eventId: event.id })}\n                />\n              </View>\n            </Card.Content>\n          </Card>\n        ))}\n      </ScrollView>\n\n      <Portal>\n        <Modal\n          visible={modalVisible}\n          onDismiss={() => setModalVisible(false)}\n          contentContainerStyle={styles.modal}\n        >\n          <ScrollView>\n            <Title>{selectedEvent ? 'Измени Настан' : 'Нов Специјален Настан'}</Title>\n            \n            <TextInput\n              label=\"Име на настанот\"\n              value={newEvent.name}\n              onChangeText={name => setNewEvent({ ...newEvent, name })}\n              style={styles.input}\n            />\n\n            <TextInput\n              label=\"Опис\"\n              value={newEvent.description}\n              onChangeText={description => setNewEvent({ ...newEvent, description })}\n              multiline\n              numberOfLines={3}\n              style={styles.input}\n            />\n\n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowDatePicker(true)}\n              style={styles.input}\n            >\n              {newEvent.date ? format(newEvent.date, 'dd.MM.yyyy') : 'Избери датум'}\n            </Button>\n\n            {showDatePicker && (\n              <DateTimePicker\n                value={newEvent.date || new Date()}\n                mode=\"date\"\n                onChange={(event, date) => {\n                  setShowDatePicker(false);\n                  if (date) {\n                    setNewEvent({ ...newEvent, date });\n                  }\n                }}\n              />\n            )}\n\n            <Button\n              mode=\"outlined\"\n              onPress={pickLocation}\n              style={styles.input}\n              icon=\"map-marker\"\n            >\n              {newEvent.location ? newEvent.location.name : 'Избери локација'}\n            </Button>\n\n            <TextInput\n              label=\"Контакт лице\"\n              value={newEvent.contactPerson?.name}\n              onChangeText={name => \n                setNewEvent({ \n                  ...newEvent, \n                  contactPerson: { ...newEvent.contactPerson, name } as any \n                })\n              }\n              style={styles.input}\n            />\n\n            <TextInput\n              label=\"Телефон\"\n              value={newEvent.contactPerson?.phone}\n              onChangeText={phone => \n                setNewEvent({ \n                  ...newEvent, \n                  contactPerson: { ...newEvent.contactPerson, phone } as any \n                })\n              }\n              style={styles.input}\n            />\n\n            <View style={styles.buttonContainer}>\n              <Button onPress={() => setModalVisible(false)} style={styles.button}>\n                Откажи\n              </Button>\n              <Button \n                mode=\"contained\" \n                onPress={handleCreateEvent}\n                style={styles.button}\n              >\n                {selectedEvent ? 'Зачувај' : 'Креирај'}\n              </Button>\n            </View>\n          </ScrollView>\n        </Modal>\n      </Portal>\n\n      <FAB\n        style={styles.fab}\n        icon=\"plus\"\n        onPress={() => {\n          setSelectedEvent(null);\n          setModalVisible(true);\n        }}\n        label=\"Нов Настан\"\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.BACKGROUND,\n  },\n  title: {\n    margin: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: COLORS.PRIMARY,\n  },\n  eventCard: {\n    margin: 16,\n    elevation: 4,\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  locationInfo: {\n    marginVertical: 8,\n  },\n  divider: {\n    marginVertical: 8,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 8,\n  },\n  chip: {\n    margin: 4,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginTop: 8,\n  },\n  modal: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    maxHeight: '80%',\n    borderRadius: 8,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginTop: 16,\n  },\n  button: {\n    marginLeft: 8,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: COLORS.PRIMARY,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, StyleSheet, ScrollView, Platform } from 'react-native';\nimport { TextInput, Button, Title, Snackbar } from 'react-native-paper';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { format } from 'date-fns';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { COLORS } from '../constants/theme';\n\nexport const EventFormScreen = () => {\n  const { t } = useLanguage();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState(new Date());\n  const [time, setTime] = useState(new Date());\n  const [location, setLocation] = useState('');\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [showTimePicker, setShowTimePicker] = useState(false);\n  const [snackbarVisible, setSnackbarVisible] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  const onDateChange = (event: any, selectedDate?: Date) => {\n    setShowDatePicker(false);\n    if (selectedDate) {\n      setDate(selectedDate);\n    }\n  };\n\n  const onTimeChange = (event: any, selectedTime?: Date) => {\n    setShowTimePicker(false);\n    if (selectedTime) {\n      setTime(selectedTime);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!title || !description) {\n      setSnackbarMessage('Пополнете ги сите полиња');\n      setSnackbarVisible(true);\n      return;\n    }\n\n    try {\n      // TODO: Implement event saving logic\n      setSnackbarMessage(t.eventSaved);\n      setSnackbarVisible(true);\n      \n      // Reset form\n      setTitle('');\n      setDescription('');\n      setLocation('');\n      setDate(new Date());\n      setTime(new Date());\n    } catch (error) {\n      setSnackbarMessage('Грешка при зачувување на настанот');\n      setSnackbarVisible(true);\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <Title style={styles.title}>{t.addEvent}</Title>\n\n      <TextInput\n        label={t.eventTitle}\n        value={title}\n        onChangeText={setTitle}\n        style={styles.input}\n      />\n\n      <TextInput\n        label={t.eventDescription}\n        value={description}\n        onChangeText={setDescription}\n        multiline\n        numberOfLines={4}\n        style={styles.input}\n      />\n\n      <Button\n        mode=\"outlined\"\n        onPress={() => setShowDatePicker(true)}\n        style={styles.input}\n      >\n        {format(date, 'dd.MM.yyyy')}\n      </Button>\n\n      {showDatePicker && (\n        <DateTimePicker\n          value={date}\n          mode=\"date\"\n          display={Platform.OS === 'ios' ? 'spinner' : 'default'}\n          onChange={onDateChange}\n        />\n      )}\n\n      <Button\n        mode=\"outlined\"\n        onPress={() => setShowTimePicker(true)}\n        style={styles.input}\n      >\n        {format(time, 'HH:mm')}\n      </Button>\n\n      {showTimePicker && (\n        <DateTimePicker\n          value={time}\n          mode=\"time\"\n          display={Platform.OS === 'ios' ? 'spinner' : 'default'}\n          onChange={onTimeChange}\n        />\n      )}\n\n      <TextInput\n        label={t.eventLocation}\n        value={location}\n        onChangeText={setLocation}\n        style={styles.input}\n      />\n\n      <Button\n        mode=\"contained\"\n        onPress={handleSubmit}\n        style={styles.submitButton}\n      >\n        {t.saveEvent}\n      </Button>\n\n      <Snackbar\n        visible={snackbarVisible}\n        onDismiss={() => setSnackbarVisible(false)}\n        duration={3000}\n      >\n        {snackbarMessage}\n      </Snackbar>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: COLORS.BACKGROUND,\n  },\n  title: {\n    marginBottom: 24,\n    textAlign: 'center',\n    color: COLORS.PRIMARY,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  submitButton: {\n    marginTop: 8,\n    backgroundColor: COLORS.PRIMARY,\n  },\n}); ","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { AdminStackParamList } from './types';\nimport { \n  AdminLoginScreen,\n  AdminDashboardScreen,\n  ManageCalendarScreen,\n  ManageLocationsScreen,\n  SpecialEventsScreen \n} from '../admin/screens';\nimport { EventFormScreen } from '../screens/EventFormScreen';\nimport { COLORS } from '../constants/theme';\n\nconst AdminStack = createNativeStackNavigator<AdminStackParamList>();\n\nexport const AdminNavigator = () => {\n  return (\n    <AdminStack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: COLORS.PRIMARY,\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n      <AdminStack.Screen\n        name=\"AdminLogin\"\n        component={AdminLoginScreen}\n        options={{ headerShown: false }}\n      />\n      <AdminStack.Screen\n        name=\"AdminDashboard\"\n        component={AdminDashboardScreen}\n        options={{ title: 'Админ Панел' }}\n      />\n      <AdminStack.Screen\n        name=\"ManageCalendar\"\n        component={ManageCalendarScreen}\n        options={{ title: 'Годишен Календар' }}\n      />\n      <AdminStack.Screen\n        name=\"AddEvent\"\n        component={EventFormScreen}\n        options={{ title: 'Додади Настан' }}\n      />\n      <AdminStack.Screen\n        name=\"ManageLocations\"\n        component={ManageLocationsScreen}\n        options={{ title: 'Локации' }}\n      />\n      <AdminStack.Screen\n        name=\"SpecialEvents\"\n        component={SpecialEventsScreen}\n        options={{ title: 'Специјални Настани' }}\n      />\n    </AdminStack.Navigator>\n  );\n}; ","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\n// Screens\nimport { CalendarScreen } from '../screens/CalendarScreen';\nimport { NotificationSettingsScreen } from '../screens/NotificationSettingsScreen';\nimport { AdminNavigator } from './AdminNavigator';\nimport { COLORS } from '../constants/theme';\n\nconst Tab = createBottomTabNavigator();\n\nconst MainTabs = () => (\n  <Tab.Navigator\n    screenOptions={{\n      tabBarActiveTintColor: COLORS.PRIMARY,\n      tabBarInactiveTintColor: 'gray',\n    }}\n  >\n    <Tab.Screen\n      name=\"Calendar\"\n      component={CalendarScreen}\n      options={{\n        title: 'Годишен План 2025 година',\n        tabBarIcon: ({ color, size }) => (\n          <Icon name=\"calendar\" size={size} color={color} />\n        ),\n      }}\n    />\n    <Tab.Screen\n      name=\"Settings\"\n      component={NotificationSettingsScreen}\n      options={{\n        title: 'Поставки',\n        tabBarIcon: ({ color, size }) => (\n          <Icon name=\"cog\" size={size} color={color} />\n        ),\n      }}\n    />\n    <Tab.Screen\n      name=\"Admin\"\n      component={AdminNavigator}\n      options={{\n        headerShown: false,\n        title: 'Админ',\n        tabBarIcon: ({ color, size }) => (\n          <Icon name=\"shield-account\" size={size} color={color} />\n        ),\n      }}\n    />\n  </Tab.Navigator>\n);\n\nexport const AppNavigator = () => {\n  return (\n    <NavigationContainer>\n      <MainTabs />\n    </NavigationContainer>\n  );\n}; ","import React, { useEffect } from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { theme } from './src/constants/theme';\nimport NotificationService from './src/services/NotificationService';\nimport { LanguageProvider } from './src/contexts/LanguageContext';\nimport { AppNavigator } from './src/navigation/AppNavigator';\n\nexport default function App() {\n  useEffect(() => {\n    // Initialize notifications when the app starts\n    const initializeApp = async () => {\n      try {\n        await NotificationService.configure();\n        await NotificationService.scheduleYearEvents();\n      } catch (error) {\n        console.error('Error initializing app:', error);\n      }\n    };\n    \n    initializeApp();\n  }, []);\n\n  return (\n    <LanguageProvider>\n      <PaperProvider theme={theme}>\n        <AppNavigator />\n      </PaperProvider>\n    </LanguageProvider>\n  );\n} ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [639], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["COLORS","SHADOWS","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","theme","_objectSpread","borderWidth","borderColor","borderRadius","backgroundColor","padding","borderStyle","marginVertical","DefaultTheme","colors","primary","accent","background","surface","error","text","roundness","CHURCH_EVENTS_2025","date","Date","name","serviceType","time","description","getServiceTypeLabel","type","CONFIG","BASE_URL","ENDPOINTS","POSTS","EVENTS","NOTIFICATIONS","AUTH_TOKEN","TIMEOUT","FACEBOOK_GROUP","WEBSITE","FACEBOOK","APP_ID","APP_SECRET","GROUP_ID","ACCESS_TOKEN","AUTO_POST","ENABLED","PLATFORMS","_createClass","ApiService","_classCallCheck","this","baseUrl","authToken","timeout","key","value","_fetchWithTimeout","_asyncToGenerator","url","options","arguments","length","undefined","controller","AbortController","timeoutId","setTimeout","abort","fetch","signal","headers","clearTimeout","_x","apply","_handleResponse","response","ok","success","data","json","catch","message","status","_x2","_createPost","postData","fetchWithTimeout","method","body","JSON","stringify","handleResponse","Error","_x3","_updatePost","postId","_x4","_x5","_deletePost","_x6","_getPosts","queryParams","_x7","_CONFIG$SOCIAL_MEDIA","FACEBOOK_GROUP_URL","WEBSITE_URL","SocialMediaService","_this","openFacebookGroup","Linking","openURL","openWebsite","openContact","shareEvent","_ref","event","formattedDate","format","locale","mk","Share","share","title","console","postToFacebookGroup","_ref2","warn","_data$error","fullMessage","access_token","postToWebsite","_ref3","createPost","content","toISOString","metadata","source","autoPost","postNotificationToSocialMedia","_ref4","facebookSuccess","websiteSuccess","results","Promise","all","postEventToSocialMedia","_ref5","notificationType","_x8","_x9","NOTIFICATION_SETTINGS_KEY","LAST_SCHEDULE_CHECK","Notifications","handleNotification","_handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","NotificationService","setupYearlyScheduling","lastCheck","AsyncStorage","getItem","now","lastCheckDate","isAfter","addYears","scheduleYearEvents","setItem","setupDailyCheck","tomorrow","setHours","setDate","getDate","timeUntilMidnight","getTime","checkAndScheduleNextYear","setInterval","currentYear","getFullYear","getMonth","events","generateNextYearEvents","scheduleEventsForYear","year","map","newDate","setFullYear","getNotificationSettings","enabled","cancelAllNotifications","nextYear","currentYearEvents","filter","eventDate","isBefore","nextYearEvents","settings","weekBefore","scheduleEventReminder","dayBefore","hourBefore","_ref6","minutesBefore","_event$time$split$map","split","Number","_event$time$split$map2","_slicedToArray","hours","minutes","notificationTime","addMinutes","identifier","scheduleNotification","urgent","configure","Platform","OS","importance","MAX","vibrationPattern","lightColor","Device","isDevice","existingStatus","finalStatus","log","parse","updateNotificationSettings","_ref9","_ref10","reminder","sound","priority","DEFAULT","trigger","channelId","sendCustomNotification","_ref11","notification","_notification$date","_notification$urgent","cancelNotification","_ref13","LANGUAGES","translations","_defineProperty","calendar","addEvent","admin","eventTitle","eventDescription","eventTime","eventLocation","saveEvent","deleteEvent","editEvent","sundayService","stNaumDay","christmas","easter","epiphany","assumption","goodFriday","palmSunday","notificationSettings","eventReminders","dailyDigest","weeklyNewsletter","login","logout","username","password","dashboard","manageEvents","manageUsers","manageNotifications","loginSuccess","loginError","eventSaved","eventDeleted","settingsSaved","LanguageContext","createContext","LANGUAGE_STORAGE_KEY","LanguageProvider","children","_useState","useState","_useState2","language","setLanguageState","useEffect","loadLanguage","savedLanguage","setLanguage","lang","_jsx","Provider","t","SERVICE_TYPE_COLORS","LITURGY","EVENING_SERVICE","CHURCH_OPEN","PICNIC","SERVICE_TYPE_ICONS","LoadingScreen","_jsxs","View","style","styles","loadingContainer","Image","require","loadingBackground","resizeMode","onError","dimOverlay","loadingContent","churchInfoContainer","Text","churchName","churchAddress","ActivityIndicator","size","color","loadingText","CalendarScreen","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","searchQuery","setSearchQuery","_useState11","Set","_useState12","selectedServiceTypes","setSelectedServiceTypes","_useState13","_useState14","contactDialogVisible","setContactDialogVisible","useRef","Animated","Value","current","timer","filteredAndGroupedEvents","React","matchesSearch","toLowerCase","includes","matchesType","has","reduce","acc","month","push","monthNames","SafeAreaView","safeArea","mainContainer","backgroundImage","overlay","ScrollView","scrollView","contentContainerStyle","scrollContent","Searchbar","placeholder","onChangeText","searchBar","buttonContainer","TouchableOpacity","socialButton","onPress","MaterialCommunityIcons","buttonText","horizontal","showsHorizontalScrollIndicator","filterContainer","Object","entries","Chip","selected","newSelectedTypes","delete","add","toggleServiceTypeFilter","filterChip","textStyle","icon","monthEvents","monthSection","Surface","monthHeader","Title","monthTitle","parseInt","eventList","sort","a","b","index","Card","eventCard","borderLeftColor","Content","cardHeader","dateContainer","dateDay","dateMonth","eventInfo","serviceTypeContainer","rightContainer","imageContainer","eventImage","getEventImage","fallbackIcon","Portal","Dialog","visible","onDismiss","dialog","fontSize","fontWeight","lineHeight","marginBottom","marginTop","Actions","Button","StyleSheet","create","flex","position","opacity","absoluteFillObject","paddingVertical","marginHorizontal","textAlign","paddingHorizontal","borderLeftWidth","flexDirection","justifyContent","alignItems","marginRight","minWidth","textTransform","paddingRight","letterSpacing","alignSelf","marginLeft","paddingLeft","overflow","zIndex","margin","NotificationSettingsScreen","setSettings","loading","setLoading","snackbarVisible","setSnackbarVisible","snackbarMessage","setSnackbarMessage","loadSettings","savedSettings","handleSettingChange","newSettings","container","centered","List","right","Switch","onValueChange","Divider","disabled","Snackbar","duration","snackbar","AUTH_TOKEN_KEY","ADMIN_CREDENTIALS","useAuth","isAuthenticated","setIsAuthenticated","checkAuthStatus","token","trimmedUsername","trim","trimmedPassword","removeItem","AdminLoginScreen","navigation","setUsername","setPassword","setError","handleLogin","replace","err","TextInput","label","input","autoCapitalize","autoCorrect","secureTextEntry","mode","button","AdminDashboardScreen","notificationDialogVisible","setNotificationDialogVisible","automatedSettingsVisible","setAutomatedSettingsVisible","eventContentDialogVisible","setEventContentDialogVisible","selectedEvent","setSelectedEvent","notificationMessage","setNotificationMessage","automatedSettings","setAutomatedSettings","eventNotifications","setEventNotifications","_useState15","_useState16","customMessages","setCustomMessages","loadEventNotifications","savedNotifications","handleLogout","handleSendNotification","handleAutomatedSettingsUpdate","saveEventContent","eventId","updatedNotifications","n","weekBeforeMessage","dayBeforeMessage","hourBeforeMessage","card","navigate","Paragraph","socialButtons","logoutButton","multiline","numberOfLines","largeDialog","ScrollArea","settingsSection","sectionTitle","props","divider","IconButton","existingContent","find","handleEventSelect","messageInput","messageTitle","maxHeight","CALENDAR_STORAGE_KEY","ManageCalendarScreen","setEvents","editDialogVisible","setEditDialogVisible","showDatePicker","setShowDatePicker","showTimePicker","setShowTimePicker","editedEvent","setEditedEvent","serviceTypeMenuVisible","setServiceTypeMenuVisible","loadCalendar","savedCalendar","eventsWithDates","saveCalendar","updatedEvents","handleSaveEvent","handleDeleteEvent","eventToDelete","filteredEvents","addButton","eventHeader","actions","handleEditEvent","DateTimePicker","onChange","Menu","anchor","Item","ManageLocationsScreen","modalVisible","setModalVisible","selectedLocation","setSelectedLocation","locations","setLocations","address","coordinates","latitude","longitude","facilities","newLocation","setNewLocation","location","locationCard","handleEditLocation","locationId","id","loc","left","directions","_Fragment","parkingInfo","subtitle","facility","Modal","modal","toString","concat","_toConsumableArray","FAB","fab","bottom","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","SpecialEventsScreen","getAuth","getFirestore","_newEvent$contactPers","_newEvent$contactPers2","requirements","newEvent","setNewEvent","_event$requirements","locationInfo","chipContainer","req","chip","contactPerson","phone","evt","flexWrap","EventFormScreen","context","useContext","useLanguage","setTitle","setDescription","setTime","setLocation","_useState17","_useState18","handleSubmit","display","selectedDate","selectedTime","submitButton","AdminStack","createNativeStackNavigator","AdminNavigator","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","headerShown","Tab","createBottomTabNavigator","MainTabs","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarIcon","Icon","AppNavigator","NavigationContainer","App","PaperProvider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","amdO","deferred","O","result","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}