{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { List, Switch, Title, ActivityIndicator, Snackbar } from 'react-native-paper';\nimport { useNotificationSettings } from \"../hooks/useNotificationSettings\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var NotificationSettingsScreen = function NotificationSettingsScreen() {\n  var _useNotificationSetti = useNotificationSettings(),\n    enabled = _useNotificationSetti.enabled,\n    loading = _useNotificationSetti.loading,\n    error = _useNotificationSetti.error,\n    toggleNotifications = _useNotificationSetti.toggleNotifications;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    snackbarVisible = _React$useState2[0],\n    setSnackbarVisible = _React$useState2[1];\n  var handleSettingChange = function () {\n    var _ref = _asyncToGenerator(function* (setter, value, settingName) {\n      yield setter(value);\n      setSnackbarVisible(true);\n    });\n    return function handleSettingChange(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsx(View, {\n      style: [styles.container, styles.centered],\n      children: _jsx(ActivityIndicator, {\n        size: \"large\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Title, {\n      style: styles.title,\n      children: \"Notification Settings\"\n    }), _jsxs(List.Section, {\n      children: [_jsx(List.Item, {\n        title: \"Event Reminders\",\n        description: \"Receive notifications before events\",\n        right: function right() {\n          return _jsx(Switch, {\n            value: enabled,\n            onValueChange: function onValueChange(value) {\n              return handleSettingChange(toggleNotifications, value, 'Event Reminders');\n            }\n          });\n        }\n      }), _jsx(List.Item, {\n        title: \"Daily Digest\",\n        description: \"Get a summary of upcoming events\",\n        right: function right() {\n          return _jsx(Switch, {\n            value: enabled,\n            onValueChange: function onValueChange(value) {\n              return handleSettingChange(toggleNotifications, value, 'Daily Digest');\n            }\n          });\n        }\n      }), _jsx(List.Item, {\n        title: \"Weekly Newsletter\",\n        description: \"Receive weekly updates and featured events\",\n        right: function right() {\n          return _jsx(Switch, {\n            value: enabled,\n            onValueChange: function onValueChange(value) {\n              return handleSettingChange(toggleNotifications, value, 'Weekly Newsletter');\n            }\n          });\n        }\n      })]\n    }), _jsx(Snackbar, {\n      visible: snackbarVisible,\n      onDismiss: function onDismiss() {\n        return setSnackbarVisible(false);\n      },\n      duration: 2000,\n      children: \"Settings updated successfully\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  centered: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    marginBottom: 16\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","List","Switch","Title","ActivityIndicator","Snackbar","useNotificationSettings","jsx","_jsx","jsxs","_jsxs","NotificationSettingsScreen","_useNotificationSetti","enabled","loading","error","toggleNotifications","_React$useState","useState","_React$useState2","_slicedToArray","snackbarVisible","setSnackbarVisible","handleSettingChange","_ref","_asyncToGenerator","setter","value","settingName","_x","_x2","_x3","apply","arguments","style","styles","container","centered","children","size","title","Section","Item","description","right","onValueChange","visible","onDismiss","duration","create","flex","padding","justifyContent","alignItems","marginBottom"],"sources":["/Users/gocepetrov/Documents/Sv Naum Calendar/src/screens/NotificationSettingsScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { List, Switch, Title, ActivityIndicator, Snackbar } from 'react-native-paper';\nimport { useNotificationSettings } from '../hooks/useNotificationSettings';\n\nexport const NotificationSettingsScreen = () => {\n  const { enabled, loading, error, toggleNotifications } = useNotificationSettings();\n  const [snackbarVisible, setSnackbarVisible] = React.useState(false);\n\n  const handleSettingChange = async (\n    setter: (value: boolean) => Promise<void>,\n    value: boolean,\n    settingName: string\n  ) => {\n    await setter(value);\n    setSnackbarVisible(true);\n  };\n\n  if (loading) {\n    return (\n      <View style={[styles.container, styles.centered]}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Title style={styles.title}>Notification Settings</Title>\n      <List.Section>\n        <List.Item\n          title=\"Event Reminders\"\n          description=\"Receive notifications before events\"\n          right={() => (\n            <Switch\n              value={enabled}\n              onValueChange={(value) =>\n                handleSettingChange(toggleNotifications, value, 'Event Reminders')\n              }\n            />\n          )}\n        />\n        <List.Item\n          title=\"Daily Digest\"\n          description=\"Get a summary of upcoming events\"\n          right={() => (\n            <Switch\n              value={enabled}\n              onValueChange={(value) =>\n                handleSettingChange(toggleNotifications, value, 'Daily Digest')\n              }\n            />\n          )}\n        />\n        <List.Item\n          title=\"Weekly Newsletter\"\n          description=\"Receive weekly updates and featured events\"\n          right={() => (\n            <Switch\n              value={enabled}\n              onValueChange={(value) =>\n                handleSettingChange(toggleNotifications, value, 'Weekly Newsletter')\n              }\n            />\n          )}\n        />\n      </List.Section>\n      <Snackbar\n        visible={snackbarVisible}\n        onDismiss={() => setSnackbarVisible(false)}\n        duration={2000}\n      >\n        Settings updated successfully\n      </Snackbar>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  centered: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    marginBottom: 16,\n  },\n}); "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,iBAAiB,EAAEC,QAAQ,QAAQ,oBAAoB;AACrF,SAASC,uBAAuB;AAA2C,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE3E,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAA,EAAS;EAC9C,IAAAC,qBAAA,GAAyDN,uBAAuB,CAAC,CAAC;IAA1EO,OAAO,GAAAD,qBAAA,CAAPC,OAAO;IAAEC,OAAO,GAAAF,qBAAA,CAAPE,OAAO;IAAEC,KAAK,GAAAH,qBAAA,CAALG,KAAK;IAAEC,mBAAmB,GAAAJ,qBAAA,CAAnBI,mBAAmB;EACpD,IAAAC,eAAA,GAA8CnB,KAAK,CAACoB,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA5DI,eAAe,GAAAF,gBAAA;IAAEG,kBAAkB,GAAAH,gBAAA;EAE1C,IAAMI,mBAAmB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAC1BC,MAAyC,EACzCC,KAAc,EACdC,WAAmB,EAChB;MACH,MAAMF,MAAM,CAACC,KAAK,CAAC;MACnBL,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC;IAAA,gBAPKC,mBAAmBA,CAAAM,EAAA,EAAAC,GAAA,EAAAC,GAAA;MAAA,OAAAP,IAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOxB;EAED,IAAInB,OAAO,EAAE;IACX,OACEN,IAAA,CAACT,IAAI;MAACmC,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAED,MAAM,CAACE,QAAQ,CAAE;MAAAC,QAAA,EAC/C9B,IAAA,CAACJ,iBAAiB;QAACmC,IAAI,EAAC;MAAO,CAAE;IAAC,CAC9B,CAAC;EAEX;EAEA,OACE7B,KAAA,CAACX,IAAI;IAACmC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAE,QAAA,GAC5B9B,IAAA,CAACL,KAAK;MAAC+B,KAAK,EAAEC,MAAM,CAACK,KAAM;MAAAF,QAAA,EAAC;IAAqB,CAAO,CAAC,EACzD5B,KAAA,CAACT,IAAI,CAACwC,OAAO;MAAAH,QAAA,GACX9B,IAAA,CAACP,IAAI,CAACyC,IAAI;QACRF,KAAK,EAAC,iBAAiB;QACvBG,WAAW,EAAC,qCAAqC;QACjDC,KAAK,EAAE,SAAPA,KAAKA,CAAA;UAAA,OACHpC,IAAA,CAACN,MAAM;YACLyB,KAAK,EAAEd,OAAQ;YACfgC,aAAa,EAAE,SAAfA,aAAaA,CAAGlB,KAAK;cAAA,OACnBJ,mBAAmB,CAACP,mBAAmB,EAAEW,KAAK,EAAE,iBAAiB,CAAC;YAAA;UACnE,CACF,CAAC;QAAA;MACF,CACH,CAAC,EACFnB,IAAA,CAACP,IAAI,CAACyC,IAAI;QACRF,KAAK,EAAC,cAAc;QACpBG,WAAW,EAAC,kCAAkC;QAC9CC,KAAK,EAAE,SAAPA,KAAKA,CAAA;UAAA,OACHpC,IAAA,CAACN,MAAM;YACLyB,KAAK,EAAEd,OAAQ;YACfgC,aAAa,EAAE,SAAfA,aAAaA,CAAGlB,KAAK;cAAA,OACnBJ,mBAAmB,CAACP,mBAAmB,EAAEW,KAAK,EAAE,cAAc,CAAC;YAAA;UAChE,CACF,CAAC;QAAA;MACF,CACH,CAAC,EACFnB,IAAA,CAACP,IAAI,CAACyC,IAAI;QACRF,KAAK,EAAC,mBAAmB;QACzBG,WAAW,EAAC,4CAA4C;QACxDC,KAAK,EAAE,SAAPA,KAAKA,CAAA;UAAA,OACHpC,IAAA,CAACN,MAAM;YACLyB,KAAK,EAAEd,OAAQ;YACfgC,aAAa,EAAE,SAAfA,aAAaA,CAAGlB,KAAK;cAAA,OACnBJ,mBAAmB,CAACP,mBAAmB,EAAEW,KAAK,EAAE,mBAAmB,CAAC;YAAA;UACrE,CACF,CAAC;QAAA;MACF,CACH,CAAC;IAAA,CACU,CAAC,EACfnB,IAAA,CAACH,QAAQ;MACPyC,OAAO,EAAEzB,eAAgB;MACzB0B,SAAS,EAAE,SAAXA,SAASA,CAAA;QAAA,OAAQzB,kBAAkB,CAAC,KAAK,CAAC;MAAA,CAAC;MAC3C0B,QAAQ,EAAE,IAAK;MAAAV,QAAA,EAChB;IAED,CAAU,CAAC;EAAA,CACP,CAAC;AAEX,CAAC;AAED,IAAMH,MAAM,GAAGnC,UAAU,CAACiD,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDd,QAAQ,EAAE;IACRe,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDb,KAAK,EAAE;IACLc,YAAY,EAAE;EAChB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}