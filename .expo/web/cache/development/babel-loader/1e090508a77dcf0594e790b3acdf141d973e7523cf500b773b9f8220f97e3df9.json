{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TextInput, Button, Title, Snackbar } from 'react-native-paper';\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var AdminLoginScreen = function AdminLoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useAuth = useAuth(),\n    login = _useAuth.login;\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield login(username, password);\n        navigation.replace('AdminDashboard');\n      } catch (err) {\n        setError('Invalid credentials');\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Title, {\n      style: styles.title,\n      children: \"Admin Login\"\n    }), _jsx(TextInput, {\n      label: \"Username\",\n      value: username,\n      onChangeText: setUsername,\n      style: styles.input\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true,\n      style: styles.input\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: handleLogin,\n      style: styles.button,\n      children: \"Login\"\n    }), _jsx(Snackbar, {\n      visible: !!error,\n      onDismiss: function onDismiss() {\n        return setError('');\n      },\n      duration: 3000,\n      children: error\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center'\n  },\n  title: {\n    marginBottom: 24,\n    textAlign: 'center'\n  },\n  input: {\n    marginBottom: 16\n  },\n  button: {\n    marginTop: 8\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","TextInput","Button","Title","Snackbar","useAuth","jsx","_jsx","jsxs","_jsxs","AdminLoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","_useAuth","login","handleLogin","_ref2","_asyncToGenerator","replace","err","apply","arguments","style","styles","container","children","title","label","value","onChangeText","input","secureTextEntry","mode","onPress","button","visible","onDismiss","duration","create","flex","padding","justifyContent","marginBottom","textAlign","marginTop"],"sources":["/Users/gocepetrov/Documents/Sv Naum Calendar/src/admin/screens/AdminLoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TextInput, Button, Title, Snackbar } from 'react-native-paper';\nimport { useAuth } from '../../hooks/useAuth';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { AdminStackParamList } from '../../navigation/types';\n\ntype AdminLoginScreenProps = {\n  navigation: NativeStackNavigationProp<AdminStackParamList, 'AdminLogin'>;\n};\n\nexport const AdminLoginScreen = ({ navigation }: AdminLoginScreenProps) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const { login } = useAuth();\n\n  const handleLogin = async () => {\n    try {\n      await login(username, password);\n      navigation.replace('AdminDashboard');\n    } catch (err) {\n      setError('Invalid credentials');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Title style={styles.title}>Admin Login</Title>\n      <TextInput\n        label=\"Username\"\n        value={username}\n        onChangeText={setUsername}\n        style={styles.input}\n      />\n      <TextInput\n        label=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n        style={styles.input}\n      />\n      <Button mode=\"contained\" onPress={handleLogin} style={styles.button}>\n        Login\n      </Button>\n      <Snackbar\n        visible={!!error}\n        onDismiss={() => setError('')}\n        duration={3000}\n      >\n        {error}\n      </Snackbar>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center',\n  },\n  title: {\n    marginBottom: 24,\n    textAlign: 'center',\n  },\n  input: {\n    marginBottom: 16,\n  },\n  button: {\n    marginTop: 8,\n  },\n}); "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,oBAAoB;AACvE,SAASC,OAAO;AAA8B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAQ9C,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAA8C;EAAA,IAAxCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC3C,IAAAC,SAAA,GAAgCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA0BxB,QAAQ,CAAC,EAAE,CAAC;IAAAyB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,QAAA,GAAkBrB,OAAO,CAAC,CAAC;IAAnBsB,KAAK,GAAAD,QAAA,CAALC,KAAK;EAEb,IAAMC,WAAW;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,MAAMH,KAAK,CAACX,QAAQ,EAAEI,QAAQ,CAAC;QAC/BR,UAAU,CAACmB,OAAO,CAAC,gBAAgB,CAAC;MACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZP,QAAQ,CAAC,qBAAqB,CAAC;MACjC;IACF,CAAC;IAAA,gBAPKG,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAI,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOhB;EAED,OACEzB,KAAA,CAACV,IAAI;IAACoC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B/B,IAAA,CAACJ,KAAK;MAACgC,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAW,CAAO,CAAC,EAC/C/B,IAAA,CAACN,SAAS;MACRuC,KAAK,EAAC,UAAU;MAChBC,KAAK,EAAEzB,QAAS;MAChB0B,YAAY,EAAEzB,WAAY;MAC1BkB,KAAK,EAAEC,MAAM,CAACO;IAAM,CACrB,CAAC,EACFpC,IAAA,CAACN,SAAS;MACRuC,KAAK,EAAC,UAAU;MAChBC,KAAK,EAAErB,QAAS;MAChBsB,YAAY,EAAErB,WAAY;MAC1BuB,eAAe;MACfT,KAAK,EAAEC,MAAM,CAACO;IAAM,CACrB,CAAC,EACFpC,IAAA,CAACL,MAAM;MAAC2C,IAAI,EAAC,WAAW;MAACC,OAAO,EAAElB,WAAY;MAACO,KAAK,EAAEC,MAAM,CAACW,MAAO;MAAAT,QAAA,EAAC;IAErE,CAAQ,CAAC,EACT/B,IAAA,CAACH,QAAQ;MACP4C,OAAO,EAAE,CAAC,CAACxB,KAAM;MACjByB,SAAS,EAAE,SAAXA,SAASA,CAAA;QAAA,OAAQxB,QAAQ,CAAC,EAAE,CAAC;MAAA,CAAC;MAC9ByB,QAAQ,EAAE,IAAK;MAAAZ,QAAA,EAEdd;IAAK,CACE,CAAC;EAAA,CACP,CAAC;AAEX,CAAC;AAED,IAAMY,MAAM,GAAGpC,UAAU,CAACmD,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE;EAClB,CAAC;EACDf,KAAK,EAAE;IACLgB,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDb,KAAK,EAAE;IACLY,YAAY,EAAE;EAChB,CAAC;EACDR,MAAM,EAAE;IACNU,SAAS,EAAE;EACb;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}