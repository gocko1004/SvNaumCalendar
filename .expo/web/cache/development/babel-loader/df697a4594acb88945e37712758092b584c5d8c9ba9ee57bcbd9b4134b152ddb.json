{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect } from 'react';\nimport * as Notifications from 'expo-notifications';\nexport var useNotificationSettings = function useNotificationSettings() {\n  var _useState = useState({\n      enabled: false,\n      loading: true,\n      error: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    settings = _useState2[0],\n    setSettings = _useState2[1];\n  var toggleNotifications = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setSettings(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            loading: true,\n            error: null\n          });\n        });\n        if (!settings.enabled) {\n          var _yield$Notifications$ = yield Notifications.requestPermissionsAsync(),\n            status = _yield$Notifications$.status;\n          var isEnabled = status === 'granted';\n          setSettings(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              enabled: isEnabled,\n              loading: false\n            });\n          });\n        } else {\n          setSettings(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              enabled: false,\n              loading: false\n            });\n          });\n        }\n      } catch (error) {\n        setSettings(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            loading: false,\n            error: 'Failed to update notification settings'\n          });\n        });\n      }\n    });\n    return function toggleNotifications() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var checkPermissions = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var _yield$Notifications$2 = yield Notifications.getPermissionsAsync(),\n            status = _yield$Notifications$2.status;\n          setSettings(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              enabled: status === 'granted',\n              loading: false\n            });\n          });\n        } catch (error) {\n          setSettings(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              loading: false,\n              error: 'Failed to check notification permissions'\n            });\n          });\n        }\n      });\n      return function checkPermissions() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    checkPermissions();\n  }, []);\n  return _objectSpread(_objectSpread({}, settings), {}, {\n    toggleNotifications: toggleNotifications\n  });\n};","map":{"version":3,"names":["useState","useEffect","Notifications","useNotificationSettings","_useState","enabled","loading","error","_useState2","_slicedToArray","settings","setSettings","toggleNotifications","_ref","_asyncToGenerator","prev","_objectSpread","_yield$Notifications$","requestPermissionsAsync","status","isEnabled","apply","arguments","checkPermissions","_ref2","_yield$Notifications$2","getPermissionsAsync"],"sources":["/Users/gocepetrov/Documents/Sv Naum Calendar/src/hooks/useNotificationSettings.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport * as Notifications from 'expo-notifications';\n\ninterface NotificationSettings {\n  enabled: boolean;\n  loading: boolean;\n  error: string | null;\n}\n\nexport const useNotificationSettings = () => {\n  const [settings, setSettings] = useState<NotificationSettings>({\n    enabled: false,\n    loading: true,\n    error: null,\n  });\n\n  const toggleNotifications = async () => {\n    try {\n      setSettings(prev => ({ ...prev, loading: true, error: null }));\n      \n      if (!settings.enabled) {\n        // Request permissions\n        const { status } = await Notifications.requestPermissionsAsync();\n        const isEnabled = status === 'granted';\n        setSettings(prev => ({ ...prev, enabled: isEnabled, loading: false }));\n      } else {\n        // You might want to implement logic to disable notifications here\n        setSettings(prev => ({ ...prev, enabled: false, loading: false }));\n      }\n    } catch (error) {\n      setSettings(prev => ({\n        ...prev,\n        loading: false,\n        error: 'Failed to update notification settings'\n      }));\n    }\n  };\n\n  useEffect(() => {\n    const checkPermissions = async () => {\n      try {\n        const { status } = await Notifications.getPermissionsAsync();\n        setSettings(prev => ({\n          ...prev,\n          enabled: status === 'granted',\n          loading: false\n        }));\n      } catch (error) {\n        setSettings(prev => ({\n          ...prev,\n          loading: false,\n          error: 'Failed to check notification permissions'\n        }));\n      }\n    };\n\n    checkPermissions();\n  }, []);\n\n  return {\n    ...settings,\n    toggleNotifications,\n  };\n}; "],"mappings":";;;;;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AAQnD,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA,EAAS;EAC3C,IAAAC,SAAA,GAAgCJ,QAAQ,CAAuB;MAC7DK,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAL,SAAA;IAJKM,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAM5B,IAAMI,mBAAmB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACtC,IAAI;QACFH,WAAW,CAAC,UAAAI,IAAI;UAAA,OAAAC,aAAA,CAAAA,aAAA,KAAUD,IAAI;YAAET,OAAO,EAAE,IAAI;YAAEC,KAAK,EAAE;UAAI;QAAA,CAAG,CAAC;QAE9D,IAAI,CAACG,QAAQ,CAACL,OAAO,EAAE;UAErB,IAAAY,qBAAA,SAAyBf,aAAa,CAACgB,uBAAuB,CAAC,CAAC;YAAxDC,MAAM,GAAAF,qBAAA,CAANE,MAAM;UACd,IAAMC,SAAS,GAAGD,MAAM,KAAK,SAAS;UACtCR,WAAW,CAAC,UAAAI,IAAI;YAAA,OAAAC,aAAA,CAAAA,aAAA,KAAUD,IAAI;cAAEV,OAAO,EAAEe,SAAS;cAAEd,OAAO,EAAE;YAAK;UAAA,CAAG,CAAC;QACxE,CAAC,MAAM;UAELK,WAAW,CAAC,UAAAI,IAAI;YAAA,OAAAC,aAAA,CAAAA,aAAA,KAAUD,IAAI;cAAEV,OAAO,EAAE,KAAK;cAAEC,OAAO,EAAE;YAAK;UAAA,CAAG,CAAC;QACpE;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdI,WAAW,CAAC,UAAAI,IAAI;UAAA,OAAAC,aAAA,CAAAA,aAAA,KACXD,IAAI;YACPT,OAAO,EAAE,KAAK;YACdC,KAAK,EAAE;UAAwC;QAAA,CAC/C,CAAC;MACL;IACF,CAAC;IAAA,gBApBKK,mBAAmBA,CAAA;MAAA,OAAAC,IAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;EAAA,GAoBxB;EAEDrB,SAAS,CAAC,YAAM;IACd,IAAMsB,gBAAgB;MAAA,IAAAC,KAAA,GAAAV,iBAAA,CAAG,aAAY;QACnC,IAAI;UACF,IAAAW,sBAAA,SAAyBvB,aAAa,CAACwB,mBAAmB,CAAC,CAAC;YAApDP,MAAM,GAAAM,sBAAA,CAANN,MAAM;UACdR,WAAW,CAAC,UAAAI,IAAI;YAAA,OAAAC,aAAA,CAAAA,aAAA,KACXD,IAAI;cACPV,OAAO,EAAEc,MAAM,KAAK,SAAS;cAC7Bb,OAAO,EAAE;YAAK;UAAA,CACd,CAAC;QACL,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdI,WAAW,CAAC,UAAAI,IAAI;YAAA,OAAAC,aAAA,CAAAA,aAAA,KACXD,IAAI;cACPT,OAAO,EAAE,KAAK;cACdC,KAAK,EAAE;YAA0C;UAAA,CACjD,CAAC;QACL;MACF,CAAC;MAAA,gBAfKgB,gBAAgBA,CAAA;QAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;MAAA;IAAA,GAerB;IAEDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAAP,aAAA,CAAAA,aAAA,KACKN,QAAQ;IACXE,mBAAmB,EAAnBA;EAAmB;AAEvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}