{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LANGUAGES, translations } from \"../constants/languages\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LanguageContext = createContext(undefined);\nvar LANGUAGE_STORAGE_KEY = '@app_language';\nexport var LanguageProvider = function LanguageProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(LANGUAGES.MK),\n    _useState2 = _slicedToArray(_useState, 2),\n    language = _useState2[0],\n    setLanguageState = _useState2[1];\n  useEffect(function () {\n    var loadLanguage = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var savedLanguage = yield AsyncStorage.getItem(LANGUAGE_STORAGE_KEY);\n          if (savedLanguage && (savedLanguage === LANGUAGES.MK || savedLanguage === LANGUAGES.EN)) {\n            setLanguageState(savedLanguage);\n          }\n        } catch (error) {\n          console.error('Error loading language:', error);\n        }\n      });\n      return function loadLanguage() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadLanguage();\n  }, []);\n  var setLanguage = function () {\n    var _ref3 = _asyncToGenerator(function* (lang) {\n      try {\n        yield AsyncStorage.setItem(LANGUAGE_STORAGE_KEY, lang);\n        setLanguageState(lang);\n      } catch (error) {\n        console.error('Error saving language:', error);\n      }\n    });\n    return function setLanguage(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(LanguageContext.Provider, {\n    value: {\n      language: language,\n      setLanguage: setLanguage,\n      t: translations[language]\n    },\n    children: children\n  });\n};\nexport var useLanguage = function useLanguage() {\n  var context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AsyncStorage","LANGUAGES","translations","jsx","_jsx","LanguageContext","undefined","LANGUAGE_STORAGE_KEY","LanguageProvider","_ref","children","_useState","MK","_useState2","_slicedToArray","language","setLanguageState","loadLanguage","_ref2","_asyncToGenerator","savedLanguage","getItem","EN","error","console","apply","arguments","setLanguage","_ref3","lang","setItem","_x","Provider","value","t","useLanguage","context","Error"],"sources":["/Users/gocepetrov/Documents/Sv Naum Calendar/src/contexts/LanguageContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LANGUAGES, Language, translations } from '../constants/languages';\n\ntype LanguageContextType = {\n  language: Language;\n  setLanguage: (lang: Language) => Promise<void>;\n  t: typeof translations[Language];\n};\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nconst LANGUAGE_STORAGE_KEY = '@app_language';\n\nexport const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [language, setLanguageState] = useState<Language>(LANGUAGES.MK);\n\n  useEffect(() => {\n    // Load saved language preference\n    const loadLanguage = async () => {\n      try {\n        const savedLanguage = await AsyncStorage.getItem(LANGUAGE_STORAGE_KEY);\n        if (savedLanguage && (savedLanguage === LANGUAGES.MK || savedLanguage === LANGUAGES.EN)) {\n          setLanguageState(savedLanguage);\n        }\n      } catch (error) {\n        console.error('Error loading language:', error);\n      }\n    };\n    loadLanguage();\n  }, []);\n\n  const setLanguage = async (lang: Language) => {\n    try {\n      await AsyncStorage.setItem(LANGUAGE_STORAGE_KEY, lang);\n      setLanguageState(lang);\n    } catch (error) {\n      console.error('Error saving language:', error);\n    }\n  };\n\n  return (\n    <LanguageContext.Provider\n      value={{\n        language,\n        setLanguage,\n        t: translations[language],\n      }}\n    >\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLanguage = () => {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,SAAS,EAAYC,YAAY;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAQ3E,IAAMC,eAAe,GAAGT,aAAa,CAAkCU,SAAS,CAAC;AAEjF,IAAMC,oBAAoB,GAAG,eAAe;AAE5C,OAAO,IAAMC,gBAAyD,GAAG,SAA5DA,gBAAyDA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAClF,IAAAC,SAAA,GAAqCb,QAAQ,CAAWG,SAAS,CAACW,EAAE,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA9DI,QAAQ,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEjCd,SAAS,CAAC,YAAM;IAEd,IAAMkB,YAAY;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC/B,IAAI;UACF,IAAMC,aAAa,SAASpB,YAAY,CAACqB,OAAO,CAACd,oBAAoB,CAAC;UACtE,IAAIa,aAAa,KAAKA,aAAa,KAAKnB,SAAS,CAACW,EAAE,IAAIQ,aAAa,KAAKnB,SAAS,CAACqB,EAAE,CAAC,EAAE;YACvFN,gBAAgB,CAACI,aAAa,CAAC;UACjC;QACF,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF,CAAC;MAAA,gBATKN,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;IAAA,GASjB;IACDT,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMU,WAAW;IAAA,IAAAC,KAAA,GAAAT,iBAAA,CAAG,WAAOU,IAAc,EAAK;MAC5C,IAAI;QACF,MAAM7B,YAAY,CAAC8B,OAAO,CAACvB,oBAAoB,EAAEsB,IAAI,CAAC;QACtDb,gBAAgB,CAACa,IAAI,CAAC;MACxB,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAAA,gBAPKI,WAAWA,CAAAI,EAAA;MAAA,OAAAH,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOhB;EAED,OACEtB,IAAA,CAACC,eAAe,CAAC2B,QAAQ;IACvBC,KAAK,EAAE;MACLlB,QAAQ,EAARA,QAAQ;MACRY,WAAW,EAAXA,WAAW;MACXO,CAAC,EAAEhC,YAAY,CAACa,QAAQ;IAC1B,CAAE;IAAAL,QAAA,EAEDA;EAAQ,CACe,CAAC;AAE/B,CAAC;AAED,OAAO,IAAMyB,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAC/B,IAAMC,OAAO,GAAGvC,UAAU,CAACQ,eAAe,CAAC;EAC3C,IAAI+B,OAAO,KAAK9B,SAAS,EAAE;IACzB,MAAM,IAAI+B,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}