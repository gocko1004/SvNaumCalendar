{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport Icon from '@expo/vector-icons/MaterialCommunityIcons';\nimport { theme, navigationTheme } from \"./src/constants/theme\";\nimport NotificationService from \"./src/services/NotificationService\";\nimport { LanguageProvider } from \"./src/contexts/LanguageContext\";\nimport { AdminNavigator } from \"./src/navigation/AdminNavigator\";\nimport { CalendarScreen } from \"./src/screens/CalendarScreen\";\nimport { EventFormScreen } from \"./src/screens/EventFormScreen\";\nimport { NotificationSettingsScreen } from \"./src/screens/NotificationSettingsScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar MainTabs = function MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveTintColor: 'gray'\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Calendar\",\n      component: CalendarScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(Icon, {\n            name: \"calendar\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Add Event\",\n      component: EventFormScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Icon, {\n            name: \"plus\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: NotificationSettingsScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Icon, {\n            name: \"cog\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n};\nexport default function App() {\n  useEffect(function () {\n    NotificationService.scheduleChurchEvents();\n  }, []);\n  return _jsx(LanguageProvider, {\n    children: _jsx(PaperProvider, {\n      theme: theme,\n      children: _jsx(NavigationContainer, {\n        theme: navigationTheme,\n        children: _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"Main\",\n            component: MainTabs\n          }), _jsx(Stack.Screen, {\n            name: \"Admin\",\n            component: AdminNavigator\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","NavigationContainer","createStackNavigator","createBottomTabNavigator","Provider","PaperProvider","Icon","theme","navigationTheme","NotificationService","LanguageProvider","AdminNavigator","CalendarScreen","EventFormScreen","NotificationSettingsScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","MainTabs","Navigator","screenOptions","tabBarActiveTintColor","colors","primary","tabBarInactiveTintColor","children","Screen","name","component","options","tabBarIcon","_ref","color","size","_ref2","_ref3","App","scheduleChurchEvents","headerShown"],"sources":["/Users/gocepetrov/Documents/Sv Naum Calendar/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport Icon from '@expo/vector-icons/MaterialCommunityIcons';\nimport { RootStackParamList, MainTabParamList } from './src/navigation/types';\nimport { theme, navigationTheme } from './src/constants/theme';\nimport NotificationService from './src/services/NotificationService';\nimport { LanguageProvider } from './src/contexts/LanguageContext';\nimport { AdminNavigator } from './src/navigation/AdminNavigator';\n\n// Screens\nimport { CalendarScreen } from './src/screens/CalendarScreen';\nimport { EventFormScreen } from './src/screens/EventFormScreen';\nimport { NotificationSettingsScreen } from './src/screens/NotificationSettingsScreen';\n\nconst Stack = createStackNavigator<RootStackParamList>();\nconst Tab = createBottomTabNavigator<MainTabParamList>();\n\nconst MainTabs = () => (\n  <Tab.Navigator\n    screenOptions={{\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveTintColor: 'gray',\n    }}\n  >\n    <Tab.Screen\n      name=\"Calendar\"\n      component={CalendarScreen}\n      options={{\n        tabBarIcon: ({ color, size }) => (\n          <Icon name=\"calendar\" size={size} color={color} />\n        ),\n      }}\n    />\n    <Tab.Screen\n      name=\"Add Event\"\n      component={EventFormScreen}\n      options={{\n        tabBarIcon: ({ color, size }) => (\n          <Icon name=\"plus\" size={size} color={color} />\n        ),\n      }}\n    />\n    <Tab.Screen\n      name=\"Settings\"\n      component={NotificationSettingsScreen}\n      options={{\n        tabBarIcon: ({ color, size }) => (\n          <Icon name=\"cog\" size={size} color={color} />\n        ),\n      }}\n    />\n  </Tab.Navigator>\n);\n\nexport default function App() {\n  useEffect(() => {\n    // Schedule predefined church events when the app starts\n    NotificationService.scheduleChurchEvents();\n  }, []);\n\n  return (\n    <LanguageProvider>\n      <PaperProvider theme={theme}>\n        <NavigationContainer theme={navigationTheme}>\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen name=\"Main\" component={MainTabs} />\n            <Stack.Screen name=\"Admin\" component={AdminNavigator} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </PaperProvider>\n    </LanguageProvider>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}